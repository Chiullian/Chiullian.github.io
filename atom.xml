<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chiullian&#39;s Blog</title>
  
  
  <link href="https://chiullian.cn/atom.xml" rel="self"/>
  
  <link href="https://chiullian.cn/"/>
  <updated>2022-04-20T08:54:09.126Z</updated>
  <id>https://chiullian.cn/</id>
  
  <author>
    <name>Chiullian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World!</title>
    <link href="https://chiullian.cn/2022/05/17/hello-world/"/>
    <id>https://chiullian.cn/2022/05/17/hello-world/</id>
    <published>2022-05-16T17:26:44.299Z</published>
    <updated>2022-04-20T08:54:09.126Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="放一串代码模板丫丫惊"><a href="#放一串代码模板丫丫惊" class="headerlink" title="放一串代码模板丫丫惊"></a>放一串代码模板丫丫惊</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CodeforcesRound#780(Div.3)</title>
    <link href="https://chiullian.cn/2022/05/13/CodeforcesRound-780-Div-3/"/>
    <id>https://chiullian.cn/2022/05/13/CodeforcesRound-780-Div-3/</id>
    <published>2022-05-13T10:55:28.000Z</published>
    <updated>2022-05-15T09:44:53.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vasya-and-Coins"><a href="#Vasya-and-Coins" class="headerlink" title="Vasya and Coins"></a><a href="https://codeforces.com/contest/1660/problem/A">Vasya and Coins</a></h2><p>Vasya decided to go to the grocery store. He found in his wallet $a$ coins of $1$ burle and $b$ coins of $2$ burles. He does not yet know the total cost of all goods, so help him find out $s$ ($s &gt; 0$): the minimum positive integer amount of money he cannot pay without change or pay at all using only his coins.For example, if $a&#x3D;1$ and $b&#x3D;1$ (he has one $1$-burle coin and one $2$-burle coin), then:  </p><ul><li>he can pay $1$ burle without change, paying with one $1$-burle coin,  </li><li>he can pay $2$ burle without change, paying with one $2$-burle coin,  </li><li>he can pay $3$ burle without change by paying with one $1$-burle coin and one $2$-burle coin,  </li><li>he cannot pay $4$ burle without change (moreover, he cannot pay this amount at all).</li></ul><p>So for $a&#x3D;1$ and $b&#x3D;1$ the answer is $s&#x3D;4$.</p><p><strong>题意 你有a枚一元硬币和b枚2元硬币，问你最小不能组合的零钱数</strong></p><p>没有1元就拼不出1元等奇数, 有的话能拼到的最大的是<code>a + 2 * b</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">#define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int a, b;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; a &gt;&gt; b;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a == 0) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; 1 &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">return;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; a + 2 * b + 1 &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">// 1 4</span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="Vlad-and-Candies"><a href="#Vlad-and-Candies" class="headerlink" title="Vlad and Candies"></a><a href="https://codeforces.com/contest/1660/problem/B">Vlad and Candies</a></h2><p>Not so long ago, Vlad had a birthday, for which he was presented with a package of candies. There were $n$ types of candies, there are $a_i$ candies of the type $i$ ($1 \le i \le n$).Vlad decided to eat exactly one candy every time, choosing any of the candies of a type that is currently the most frequent (if there are several such types, he can choose any of them). To get the maximum pleasure from eating, Vlad does not want to eat two candies of the same type in a row.Help him figure out if he can eat all the candies without eating two identical candies in a row.</p><p>收到一包含有n种类的糖果，你每次不能连续两次吃相同种类的糖果并且只能吃数量最多的糖果，问你能不能把所有糖吃完,</p><p>思路:我们可以马上发现,只需要最多的糖果与第二多的糖果之间的数量不超过2,就能一直往下吃,碰见小的就会有更多的选择</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int n;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; n;</span></span></span><br><span class="line"><span class="string"><span class="meta">vector&lt;int&gt; a(n);</span></span></span><br><span class="line"><span class="string"><span class="meta">int max1 = -1, max2 = -1;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt; n; i ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; a[i];</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[i] &gt;= max1) max2 = max1, max1 = a[i];</span></span></span><br><span class="line"><span class="string"><span class="meta">else if (a[i] &gt;= max2) max2 = a[i];</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">if (n == 1 &amp;&amp; a[0] &gt; 1) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; &quot;</span>NO<span class="string">&quot; &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">return;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125; </span></span></span><br><span class="line"><span class="string"><span class="meta">if (n == 1 &amp;&amp; a[0] == 1) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; &quot;</span>YES<span class="string">&quot; &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">return;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">if (max1 - max2 &gt; 1) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; &quot;</span>NO<span class="string">&quot; &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">return;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; &quot;</span>YES<span class="string">&quot; &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="Get-an-Even-String"><a href="#Get-an-Even-String" class="headerlink" title="Get an Even String"></a><a href="https://codeforces.com/contest/1660/problem/C">Get an Even String</a></h2><p>A string $a&#x3D;a_1a_2\dots a_n$ is called even if it consists of a concatenation (joining) of strings of length $2$ consisting of the same characters. In other words, a string $a$ is even if two conditions are satisfied at the same time:  </p><ul><li>its length $n$ is even; </li><li>for all odd $i$ ($1 \le i \le n - 1$), $a_i &#x3D; a_{i+1}$ is satisfied.</li></ul><p> For example, the following strings are even: “” (empty string), “tt”, “aabb”, “oooo”, and “ttrrrroouuuuuuuukk”. The following strings are not even: “aaa”, “abab” and “abba”.Given a string $s$ consisting of lowercase Latin letters. Find the minimum number of characters to remove from the string $s$ to make it even. The deleted characters do not have to be consecutive.</p><p><strong>题意:</strong></p><p>定义一个字符串是合法的满足 1. 长度为偶数 2. 所有奇数位的字符都等于下一个字符<br>例如“aabb”，“ttllqq”是合法的,给你你个字符串，问你最少删除多少个字串能令其变成合法字符串</p><p><strong>思路:</strong></p><p>如果直接求删除的话很难维护删除后的信息, 所以想到求最多能组成一对一对的的长度,这里有两种思路,一种是dp,还有一种是贪心,</p><ol><li><p>$DP$, 状态转移方程的含义$f_i$ 前i个字母中能拼成两两一对的最长的(可以不连续), 下面考虑如何转移, 如果,开一个数组来记录,当前字母前面出现的位置, 转移的上一个位置从上一个出现相同字母的上一个位置转移</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">sz</span>(s);</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">pre</span><span class="params">(<span class="number">27</span>, <span class="number">-1</span>)</span></span>;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">f[i + <span class="number">1</span>] = f[i];</span><br><span class="line"><span class="keyword">if</span> (pre[s[i] - <span class="string">&#x27;a&#x27;</span>] != <span class="number">-1</span>) </span><br><span class="line">f[i + <span class="number">1</span>] = <span class="built_in">max</span>(f[i + <span class="number">1</span>], f[pre[s[i] - <span class="string">&#x27;a&#x27;</span>]] + <span class="number">2</span>);</span><br><span class="line">pre[s[i] - <span class="string">&#x27;a&#x27;</span>] = i;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - f[n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>$贪心$, 如果字母之前出现过就加一对字母<code>ans+2</code>然后清空标记</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">sz</span>(s), ans = <span class="number">0</span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">st</span><span class="params">(<span class="number">256</span>, <span class="literal">false</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (st[s[i]]) &#123;</span><br><span class="line">ans += <span class="number">2</span>;</span><br><span class="line"><span class="built_in">fill</span>(st.<span class="built_in">begin</span>(), st.<span class="built_in">end</span>(), <span class="literal">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> st[s[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="Maximum-Product-Strikes-Back"><a href="#Maximum-Product-Strikes-Back" class="headerlink" title="Maximum Product Strikes Back"></a><a href="https://codeforces.com/contest/1660/problem/D">Maximum Product Strikes Back</a></h2><p>You are given an array $a$ consisting of $n$ integers. For each $i$ ($1 \le i \le n$) the following inequality is true: $-2 \le a_i \le 2$.</p><p>You can remove any number (possibly $0$) of elements from the beginning of the array and any number (possibly $0$) of elements from the end of the array.</p><p>You are allowed to delete the whole array.You need to answer the question: how many elements should be removed from the beginning of the array, and how many elements should be removed from the end of the array, so that the result will be an array whose product (multiplication) of elements is maximal. If there is more than one way to get an array with the maximum product of elements on it, you are allowed to output any of them. The product of elements of an empty array (array of length $0$) should be assumed to be $1$.</p><p><strong>题意</strong></p><p>给你一个元素大小绝对值小于等于2的数组，你可以从头和从尾部删去若干个数，问你怎么删去原色能使剩下元素中乘积最大，如果数组为空，乘积为 1</p><p><strong>思路</strong></p><p>其实这题思路好想但是边界处理比较恶心,算是锻炼一下代码能力了吧</p><p>答案肯定不是<code>0</code>,题目说空是<code>1</code>, 所有0是划分线, 所以只需要看所有分块的最大值即可,只有2有贡献值所有统计<code>2</code>的个数即可,因为值会很大所以统计2的个数不能直接存,如果分块内的负数数量是偶数个,直接进行比即可,如果是奇数,枚举从左边开始减直到减到第一个负数,同理从右边枚举,比较最大的即可,还是有很多细节的,见代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">#define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int n;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; n;</span></span></span><br><span class="line"><span class="string"><span class="meta">vector&lt;int&gt; a(n + 1);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt; n; i ++) cin &gt;&gt; a[i];</span></span></span><br><span class="line"><span class="string"><span class="meta">tuple&lt;int, int, int&gt; ans&#123;n, 0, 0&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (n == 1) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[0] == 2) cout &lt;&lt; 0 &lt;&lt; &#x27; &#x27; &lt;&lt; 0 &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">else cout &lt;&lt; 0 &lt;&lt; &#x27; &#x27; &lt;&lt; 1 &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">return;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0, j = 0; i &lt; n; ) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">j = i;</span></span></span><br><span class="line"><span class="string"><span class="meta">while (j &lt; n &amp;&amp; a[j] != 0) j ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[j] == 0 || j == n) j --;</span></span></span><br><span class="line"><span class="string"><span class="meta">int fu = 0, er = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">// debug(i, j);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int l = i; l &lt;= j; l ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[l] &lt; 0) fu ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (abs(a[l]) == 2)er ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (fu == 0) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int L, R, res;</span></span></span><br><span class="line"><span class="string"><span class="meta">tie(L, R, res) = ans;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (res &lt; er) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = &#123;i, j, er&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">// debug(L, R, res);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125; else if (!(fu &amp; 1)) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int L, R, res;</span></span></span><br><span class="line"><span class="string"><span class="meta">tie(L, R, res) = ans;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (res &lt; er) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = &#123;i, j, er&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125; else &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int t = er;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int l = i; l &lt;= j; l ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[l] == 2) t --;</span></span></span><br><span class="line"><span class="string"><span class="meta">else if (a[l] == -2) t --;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[l] &lt; 0) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int L, R, res;</span></span></span><br><span class="line"><span class="string"><span class="meta">tie(L, R, res) = ans;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (res &lt; t) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = &#123;l + 1, j, t&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">break;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">t = er;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int r = j; r &gt;= i; r --) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[r] == 2) t --;</span></span></span><br><span class="line"><span class="string"><span class="meta">else if (a[r] == -2) t --;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[r] &lt; 0) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int L, R, res;</span></span></span><br><span class="line"><span class="string"><span class="meta">tie(L, R, res) = ans;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (res &lt; t) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = &#123;i, r - 1, t&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">break;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">i = j + 2;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">int L, R, res;</span></span></span><br><span class="line"><span class="string"><span class="meta">tie(L, R, res) = ans;</span></span></span><br><span class="line"><span class="string"><span class="meta">// debug(L, R, res);</span></span></span><br><span class="line"><span class="string"><span class="meta">if (n == L || n == R) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; 0 &lt;&lt; &#x27; &#x27; &lt;&lt; n &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125; else cout &lt;&lt; L &lt;&lt; &#x27; &#x27; &lt;&lt; n - R - 1 &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="Matrix-and-Shifts"><a href="#Matrix-and-Shifts" class="headerlink" title="Matrix and Shifts"></a><a href="https://codeforces.com/contest/1660/problem/E">Matrix and Shifts</a></h2><p>You are given a binary matrix $A$ of size $n \times n$. Rows are numbered from top to bottom from $1$ to $n$, columns are numbered from left to right from $1$ to $n$. The element located at the intersection of row $i$ and column $j$ is called $A_{ij}$. Consider a set of $4$ operations:  </p><ol><li>Cyclically shift all rows up. The row with index $i$ will be written in place of the row $i-1$ ($2 \le i \le n$), the row with index $1$ will be written in place of the row $n$.  </li><li>Cyclically shift all rows down. The row with index $i$ will be written in place of the row $i+1$ ($1 \le i \le n - 1$), the row with index $n$ will be written in place of the row </li><li>Cyclically shift all columns to the left. The column with index $j$ will be written in place of the column $j-1$ ($2 \le j \le n$), the column with index $1$ will be written in place of the column $n$.  </li><li>Cyclically shift all columns to the right. The column with index $j$ will be written in place of the column $j+1$ ($1 \le j \le n - 1$), the column with index $n$ will be written in place of the column $1$.</li></ol><p> You can perform an arbitrary (possibly zero) number of operations on the matrix; the operations can be performed in any order.After that, you can perform an arbitrary (possibly zero) number of new xor-operations:  </p><ul><li>Select any element $A_{ij}$ and assign it with new value $A_{ij} \oplus 1$. In other words, the value of $(A_{ij} + 1) \bmod 2$ will have to be written into element $A_{ij}$.</li></ul><p>Each application of this xor-operation costs one burl. Note that the $4$ shift operations — are free. These $4$ operations can only be performed before xor-operations are performed.Output the minimum number of burles you would have to pay to make the $A$ matrix unitary. A unitary matrix is a matrix with ones on the main diagonal and the rest of its elements are zeros (that is, $A_{ij} &#x3D; 1$ if $i &#x3D; j$ and $A_{ij} &#x3D; 0$ otherwise).</p><p><strong>题意</strong></p><p>每次可以对几个元素^1就是变换一下0变1, 1变0;问最少多少次可以是只有主对角线上的值为1,可以循环移动每一行和每一列,循环不花费,改变花费</p><p>直接计算每一条主对角线上和上下循环后能成为主对角线上的点,出现1的数量最多的为把其他的多余的1都去掉,然后同一对角线为0的变为1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int n;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; n;</span></span></span><br><span class="line"><span class="string"><span class="meta">vector&lt;string&gt; g(n);</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">for (auto &amp;x : g) cin &gt;&gt; x;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">int sum = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (auto x : g) </span></span></span><br><span class="line"><span class="string"><span class="meta">for (auto y : x) </span></span></span><br><span class="line"><span class="string"><span class="meta">sum += y == &#x27;1&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">auto check = [&amp;] (int x, int y) -&gt; bool &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (x &lt; 0 || (x &gt;= n) || y &lt; 0 || (y &gt;= n)) return false;</span></span></span><br><span class="line"><span class="string"><span class="meta">return true;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta">int ans = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt; n; i ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int sx = 0, sy = i;</span></span></span><br><span class="line"><span class="string"><span class="meta">int max_sum = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">while (check(sx, sy)) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">max_sum += g[sx][sy] == &#x27;1&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">sx ++, sy ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">int tx = n - i, ty = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">while (check(tx, ty)) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">max_sum += g[tx][ty] == &#x27;1&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">tx ++, ty ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = max(ans, max_sum);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; sum - ans + n - ans &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="Promising-String-hard-version"><a href="#Promising-String-hard-version" class="headerlink" title="Promising String (hard version)"></a><a href="https://codeforces.com/contest/1660/problem/F2">Promising String (hard version)</a></h2><p>This is the easy version of Problem F. The only difference between the easy version and the hard version is the constraints.We will call a non-empty string balanced if it contains the same number of plus and minus signs. For example: strings “+–+” and “++-+–” are balanced, and strings “+–”, “–” and “” are not balanced.We will call a string promising if the string can be made balanced by several (possibly zero) uses of the following operation:</p><ul><li>replace two adjacent minus signs with one plus sign.</li></ul><p> In particular, every balanced string is promising. However, the converse is not true: not every promising string is balanced.For example, the string “-+—“ is promising, because you can replace two adjacent minuses with plus and get a balanced string “-++-“, or get another balanced string “-+-+”.How many non-empty substrings of the given string $s$ are promising? Each non-empty promising substring must be counted in the answer as many times as it occurs in string $s$.Recall that a substring is a sequence of consecutive characters of the string. For example, for string “+-+” its substring are: “+-“, “-+”, “+”, “+-+” (the string is a substring of itself) and some others. But the following strings are not its substring: “–”, “++”, “-++”.</p><p>F1和F2题意一样，区别为F1的n为1≤n≤3000，F2为1≤n≤2e5,给你只含“+”，“-”的字符串，你可以把相邻两个“-”转化为“+” ， 问有多少个子字符串可以通过这种操作使“+”数量等于“-”，例如“±”，“±–”，都是合法的</p><p>因此用前缀和记录符号数量遇<code>-</code>就加1否则减1</p><p>就变成了多少连续子段和大于零</p><p>要完成上述的条件需要满足的条件</p><ol><li><code>-</code>号数量必须大于等于<code>+</code>号数量</li><li><code>-</code>号数量减去 <code>+</code>数量必须是3的整数倍(每两个<code>-</code>都可以变成一个<code>+</code>来平衡,就是花费3个)</li></ol><p>第一种方法直接暴力枚举区间的左端点和右端点O($n^2$)</p><p>第二种(s[r] - s[l - 1]) % 3 &#x3D;&#x3D; 0 就是 s[r ] &#x3D; s[l] 在模3的意义下</p><p>且 s[l - 1] $\leq$ s[r]</p><p>所以在同一个模数的情况下求小于 s[r]的数有多少就行,然后就是树状数组,带3个偏序的树状数组,分别代表模为0, 模为1, 模为2的情况下的树状数组, 还得加一个偏移量,因为s[i]有可能是小于零的数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 8e5 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">ll tr[N][3];</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void add(int x, int type) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; x &lt;= N; x += x &amp; -x) tr[x][type] ++;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">ll query(int x, int type, int res = 0) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; x; x -= x &amp; -x) res += tr[x][type];</span></span></span><br><span class="line"><span class="string"><span class="meta">return res;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">static char s[N];</span></span></span><br><span class="line"><span class="string"><span class="meta">ll ans = 0, n;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; n &gt;&gt; s + 1;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 1; i &lt;= (n &lt;&lt; 1) + 1; i ++) </span></span></span><br><span class="line"><span class="string"><span class="meta">for (int j = 0; j &lt; 3; j ++) tr[i][j] = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">static int sum[N];</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 1; i &lt;= n; i ++) </span></span></span><br><span class="line"><span class="string"><span class="meta">sum[i] = sum[i - 1] + ((s[i] == &#x27;-&#x27;) ? 1 : -1);</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">// for (int i = 1; i &lt;= n; i ++) debug(sum[i]);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt;= n; i ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans += query(sum[i] + n + 1, (sum[i] % 3 + 3) % 3);</span></span></span><br><span class="line"><span class="string"><span class="meta">add(sum[i] + n + 1, (sum[i] % 3 + 3) % 3);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; ans &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125; </span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vasya-and-Coins&quot;&gt;&lt;a href=&quot;#Vasya-and-Coins&quot; class=&quot;headerlink&quot; title=&quot;Vasya and Coins&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codeforces.com/contest/1</summary>
      
    
    
    
    <category term="Codeforce" scheme="https://chiullian.cn/categories/Codeforce/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>AcWing每日一题2022年5月9日~5月15日</title>
    <link href="https://chiullian.cn/2022/05/11/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022%E5%B9%B45%E6%9C%889%E6%97%A5-5%E6%9C%8815%E6%97%A5/"/>
    <id>https://chiullian.cn/2022/05/11/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022%E5%B9%B45%E6%9C%889%E6%97%A5-5%E6%9C%8815%E6%97%A5/</id>
    <published>2022-05-11T11:19:24.000Z</published>
    <updated>2022-05-11T15:03:00.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-3359-更多奇怪的照片"><a href="#AcWing-3359-更多奇怪的照片" class="headerlink" title="AcWing 3359. 更多奇怪的照片"></a><a href="https://www.acwing.com/problem/content/3362/">AcWing 3359. 更多奇怪的照片</a></h2><p>Farmer John 正再一次尝试给他的 $N$ 头奶牛拍照。</p><p>每头奶牛有一个范围在$1…100$ 之内的整数的「品种编号」，编号可能重复。</p><p>Farmer John 对他的照片有一个十分古怪的构思：他希望将所有的奶牛分为不相交的若干组（换句话说，将每头奶牛分到恰好一组中）并将这些组排成一行，使得第一组的奶牛的品种编号之和为偶数，第二组的编号之和为奇数，以此类推，奇偶交替。</p><p>Farmer John 可以分成的最大组数是多少？</p><p>思路:</p><p>这题只与奇偶性有关, 所以只需要计算出奇数的数量和偶数的数量即可, 奇数觉得上限,因为偶数不能拼成奇数,但是奇数能拼成偶数,所以奇数比偶数多的时候一定要减少奇数,因为奇数如果比偶数多的话,拼到最后就不能组成一奇一偶的情况,所有用两个奇数拼成一个偶数,如果最后奇偶相同,答案就是2 * 奇数奇偶不同,那么就是奇数*2+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, odd = <span class="number">0</span>, even = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : a) &#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (x &amp; <span class="number">1</span>) odd ++;</span><br><span class="line"><span class="keyword">else</span> even ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (odd &gt; even) odd -= <span class="number">2</span>, even ++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (odd == even) cout &lt;&lt; even * <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; odd * <span class="number">2</span> + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-3359-更多奇怪的照片&quot;&gt;&lt;a href=&quot;#AcWing-3359-更多奇怪的照片&quot; class=&quot;headerlink&quot; title=&quot;AcWing 3359. 更多奇怪的照片&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.</summary>
      
    
    
    
    <category term="AcWing每日一题" scheme="https://chiullian.cn/categories/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="https://chiullian.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>AcWing第50场周赛</title>
    <link href="https://chiullian.cn/2022/05/11/AcWing%E7%AC%AC50%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <id>https://chiullian.cn/2022/05/11/AcWing%E7%AC%AC50%E5%9C%BA%E5%91%A8%E8%B5%9B/</id>
    <published>2022-05-11T04:11:56.000Z</published>
    <updated>2022-05-15T09:45:51.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-4416-缺少的数"><a href="#AcWing-4416-缺少的数" class="headerlink" title="AcWing 4416. 缺少的数"></a><a href="https://www.acwing.com/problem/content/4419/">AcWing 4416. 缺少的数</a></h2><p>给定一个长度为 $n−1$的数列 $a1,a2,…,an−1$。</p><p>数列中的元素两两不同，且都在 $1∼n$ 的范围内。</p><p>请你计算，$1∼n$ 中的哪一个数没有在数列中出现过。</p><p>过于简单0.0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">static</span> <span class="type">bool</span> st[N];</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">st[x] =  <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (st[i] == <span class="literal">false</span>) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4417-选区间"><a href="#AcWing-4417-选区间" class="headerlink" title="AcWing 4417. 选区间"></a><a href="https://www.acwing.com/problem/content/4420/">AcWing 4417. 选区间</a></h2><p>给定 $n$ 个一类区间 $(l1,i,r1,i)$。</p><p>给定 $m$ 个二类区间 $(l2,i,r2,i)$。</p><p>请你从一类区间中挑选一个区间，从二类区间中挑选一个区间。</p><p>要求，选出的两个区间之间的距离尽可能大。</p><p>请你输出最大可能距离。</p><p>关于两区间 $(l1,r1)$ 和 $(l2,r2)$ 之间的距离，我们规定：</p><ul><li>如果两区间存在交集，则区间距离为 $0$。</li><li>如果两区间不存在交集，则区间距离为 |i−j||i−j| 的最小可能值，其中 $l1≤i≤r1,l2≤j≤r2$。</li></ul><p>思路也是比较简单,就是分别取二种极端的情况即可</p><ol><li>一区间(按照r的值)最往左放,二区间(按照l的值)最往右放</li><li>一区间(按照l的值)最往右放,二区间(按照r的值)最往左放</li></ol><p>然后取一个最大的即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;PII&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="type">int</span> minr_a = INF, maxl_a = <span class="number">0</span>, minr_b = INF, maxl_b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : a) &#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">minr_a = <span class="built_in">min</span>(minr_a, y);</span><br><span class="line">maxl_a = <span class="built_in">max</span>(maxl_a, x);</span><br><span class="line">&#125; </span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="function">vector&lt;PII&gt; <span class="title">b</span><span class="params">(m)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : b) &#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">minr_b = <span class="built_in">min</span>(minr_b, y);</span><br><span class="line">maxl_b = <span class="built_in">max</span>(maxl_b, x);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(<span class="built_in">max</span>(maxl_b - minr_a, <span class="number">0</span>), <span class="built_in">max</span>(maxl_a - minr_b, <span class="number">0</span>)) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4418-选元素"><a href="#AcWing-4418-选元素" class="headerlink" title="AcWing 4418. 选元素"></a><a href="https://www.acwing.com/problem/content/4421/">AcWing 4418. 选元素</a></h2><p>给定一个长度为 $n$ 的整数序列 $a1,a2,…,an$。</p><p>请你从中挑选 $x$ 个元素，要求：</p><ol><li>原序列中的<strong>每一个</strong>长度为 $k$ 的<strong>连续子序列</strong>都至少包含一个被选中的元素。</li><li>满足条件 $1$ 的前提下，所选 $x$ 个元素的相加之和应尽可能大。</li></ol><p>输出最大可能和。</p><p>这题我们考虑<code>DP</code></p><p>根据题意我们把,$f_{ij}$ 表示前i项且选第i项长度为j的集合</p><p>先是两维枚举ai和个数;</p><p>上一个状态t可以从$i - k \leq t &lt; i$ 区间内的间转移过来  </p><blockquote><p> <code>f[i][j] = max(f[i][j],f[t][j-1] + a[i])</code></p><p>性质:<strong>max</strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> n, k, x;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k &gt;&gt; x;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(f, <span class="number">-0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line"></span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= x; j ++) </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> t = <span class="built_in">max</span>((ll)<span class="number">0</span>, i - k); t &lt; i; t ++) </span><br><span class="line">f[i][j] = <span class="built_in">max</span>(f[i][j], f[t][j - <span class="number">1</span>] + a[i]);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n - k + <span class="number">1</span>; i &lt;= n; i ++) ans = <span class="built_in">max</span>(ans, f[i][x]);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-4416-缺少的数&quot;&gt;&lt;a href=&quot;#AcWing-4416-缺少的数&quot; class=&quot;headerlink&quot; title=&quot;AcWing 4416. 缺少的数&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.com/probl</summary>
      
    
    
    
    <category term="AcWing周赛" scheme="https://chiullian.cn/categories/AcWing%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
    <category term="AcWing" scheme="https://chiullian.cn/tags/AcWing/"/>
    
  </entry>
  
  <entry>
    <title>CodeforcesRound#787(Div.3)</title>
    <link href="https://chiullian.cn/2022/05/09/CodeforcesRound-787-Div-3/"/>
    <id>https://chiullian.cn/2022/05/09/CodeforcesRound-787-Div-3/</id>
    <published>2022-05-09T15:06:13.000Z</published>
    <updated>2022-05-15T09:45:16.892Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Food-for-Animals"><a href="#Food-for-Animals" class="headerlink" title="Food for Animals"></a><a href="https://codeforces.com/contest/1675/problem/A">Food for Animals</a></h2><p>In the pet store on sale there are:  $a$ packs of dog food;  $b$ packs of cat food;  $c$ packs of universal food (such food is suitable for both dogs and cats). Polycarp has $x$ dogs and $y$ cats. Is it possible that he will be able to buy food for all his animals in the store? Each of his dogs and each of his cats should receive one pack of suitable food for it.</p><p>$x$猫粮$c$狗粮$z$个任意粮，$a$个猫$b$个狗，能不能让每个小动物至少分到一个粮.</p><p>简单模拟即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c, x, y;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (a &lt; x) &#123;</span><br><span class="line"><span class="keyword">if</span> (a + c &lt; x) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">c -= (x - a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b &lt; y) &#123;</span><br><span class="line"><span class="keyword">if</span> (b + c &lt; y) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Make-It-Increasing"><a href="#Make-It-Increasing" class="headerlink" title="Make It Increasing"></a><a href="https://codeforces.com/contest/1675/problem/B">Make It Increasing</a></h2><p>Given $n$ integers $a_1, a_2, \dots, a_n$. You can perform the following operation on them:  select any element $a_i$ ($1 \le i \le n$) and divide it by $2$ (round down). In other words, you can replace any selected element $a_i$ with the value $\left \lfloor \frac{a_i}{2}\right\rfloor$ (where $\left \lfloor x \right\rfloor$ is – round down the real number $x$). Output the minimum number of operations that must be done for a sequence of integers to become strictly increasing (that is, for the condition $a_1 \lt a_2 \lt \dots \lt a_n$ to be satisfied). Or determine that it is impossible to obtain such a sequence. Note that elements cannot be swapped. The only possible operation is described above.For example, let $n &#x3D; 3$ and a sequence of numbers $[3, 6, 5]$ be given. Then it is enough to perform two operations on it:   Write the number $\left \lfloor \frac{6}{2}\right\rfloor &#x3D; 3$ instead of the number $a_2&#x3D;6$ and get the sequence $[3, 3, 5]$;  Then replace $a_1&#x3D;3$ with $\left \lfloor \frac{3}{2}\right\rfloor &#x3D; 1$ and get the sequence $[1, 3, 5]$. The resulting sequence is strictly increasing because $1 \lt 3 \lt 5$.</p><p>给第一个数组，每次可以让数组中的一个数变为 $\left \lfloor \frac{a_i}{2}\right\rfloor$ (向下取整)。求最少几次可以让数组变为严格递增数组.</p><p>从后往前推即可如果大于后面的就一直除$2$, 如果不是最后一项但值是<code>0</code>了就无解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;x : a) cin &gt;&gt; x;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i --) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i + <span class="number">1</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (a[i] &gt;= a[i + <span class="number">1</span>]) a[i] /= <span class="number">2</span>, ans ++;</span><br><span class="line">&#125; </span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Detective-Task-思维吧"><a href="#Detective-Task-思维吧" class="headerlink" title="Detective Task(思维吧)"></a><a href="https://codeforces.com/contest/1675/problem/C">Detective Task(思维吧)</a></h2><p>Polycarp bought a new expensive painting and decided to show it to his $n$ friends. He hung it in his room. $n$ of his friends entered and exited there one by one. At one moment there was no more than one person in the room. In other words, the first friend entered and left first, then the second, and so on.It is known that at the beginning (before visiting friends) a picture hung in the room. At the end (after the $n$-th friend) it turned out that it disappeared. At what exact moment it disappeared — there is no information.Polycarp asked his friends one by one. He asked each one if there was a picture when he entered the room. Each friend answered one of three:  no (response encoded with 0);  yes (response encoded as 1);  can’t remember (response is encoded with ?). Everyone except the thief either doesn’t remember or told the truth. The thief can say anything (any of the three options).Polycarp cannot understand who the thief is. He asks you to find out the number of those who can be considered a thief according to the answers.</p><p>一个人照片被偷了, 问n个人谁偷了,有三种回答1, 0, ?分别代表看见图片了, 没看图片,忘了</p><p>好人说真的,坏人随意,问嫌疑的人有几个</p><p>分析:</p><ul><li><p>经过举例我们可以发现,嫌疑人会出现在最后一个1出现的位置,和第一个0出现的位置,以及他们中间的人都有嫌疑</p></li><li><p>如果没有0,只有1和?, 那么最后一个1以及最后一个1后面的?都有可能</p></li><li><p>如果没有1, 只有0和?,那么第一个0以及前面所有的?都有可能</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">bool</span> ok = <span class="literal">false</span>;</span><br><span class="line"><span class="type">int</span> o_final = <span class="number">-1</span>, z_first = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sz</span>(s); i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;1&#x27;</span>) o_final = i;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; !ok) z_first = i, ok = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (~o_final &amp;&amp; ~z_first &amp;&amp; z_first &gt; o_final) cout &lt;&lt; z_first - o_final + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (o_final == <span class="number">-1</span> &amp;&amp; z_first == <span class="number">-1</span>) cout &lt;&lt; <span class="built_in">sz</span>(s) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (o_final == <span class="number">-1</span> &amp;&amp; ~z_first) cout &lt;&lt; z_first + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (~o_final &amp;&amp; z_first == <span class="number">-1</span>) cout &lt;&lt; <span class="built_in">sz</span>(s) - o_final &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vertical-Paths"><a href="#Vertical-Paths" class="headerlink" title="Vertical Paths"></a><a href="https://codeforces.com/contest/1675/problem/D">Vertical Paths</a></h2><p>You are given a rooted tree consisting of $n$ vertices. Vertices are numbered from $1$ to $n$. Any vertex can be the root of a tree.A tree is a connected undirected graph without cycles. A rooted tree is a tree with a selected vertex, which is called the root.The tree is specified by an array of parents $p$ containing $n$ numbers: $p_i$ is a parent of the vertex with the index $i$. The parent of a vertex $u$ is a vertex that is the next vertex on the shortest path from $u$ to the root. For example, on the simple path from $5$ to $3$ (the root), the next vertex would be $1$, so the parent of $5$ is $1$.The root has no parent, so for it, the value of $p_i$ is $i$ (the root is the only vertex for which $p_i&#x3D;i$).Find such a set of paths that:  </p><ul><li><p>each vertex belongs to exactly one path, each path can contain one or more vertices;  </p></li><li><p>in each path each next vertex — is a son of the current vertex (that is, paths always lead down — from parent to son); </p></li><li><p>number of paths is minimal.</p></li></ul><p>For example, if $n&#x3D;5$ and $p&#x3D;[3, 1, 3, 3, 1]$, then the tree can be divided into three paths:   </p><ol><li><p>$3 \rightarrow 1 \rightarrow 5$ (path of $3$ vertices),</p></li><li><p>$4$ (path of $1$ vertices).  </p></li><li><p>$2$ (path of $1$ vertices).</p></li></ol><p>给定一棵树，我们要把它拆成一条条链，问你最少要拆成多少条链，并且输出每条链的大小和每条链的DFS序</p><p>dfs遍历<del>就是链的遍历</del> ，我们只需要在树遍历到根节点回溯的时候（即这条链被遍历完了），进行添加到另一条链即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; g[N], ans[N];</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">sz</span>(g[u])) <span class="keyword">return</span> ans[cnt ++].<span class="built_in">emplace_back</span>(u), <span class="built_in">void</span>();</span><br><span class="line">ans[cnt].<span class="built_in">emplace_back</span>(u);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> v : g[u]) <span class="built_in">dfs</span>(v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(st, <span class="literal">false</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n, root = <span class="number">-1</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">cin &gt;&gt; p[i];</span><br><span class="line"><span class="keyword">if</span> (p[i] == i) root = i;</span><br><span class="line"><span class="keyword">else</span> g[p[i]].<span class="built_in">emplace_back</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(root);</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sz</span>(ans[i]) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : ans[i]) cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) g[i].<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++) ans[i].<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Replace-With-the-Previous-Minimize"><a href="#Replace-With-the-Previous-Minimize" class="headerlink" title="Replace With the Previous, Minimize"></a><a href="https://codeforces.com/contest/1675/problem/E">Replace With the Previous, Minimize</a></h2><p>You are given a string $s$ of lowercase Latin letters. The following operation can be used:   select one character (from ‘a’ to ‘z’) that occurs at least once in the string. And replace all such characters in the string with the previous one in alphabetical order on the loop. For example, replace all ‘c’ with ‘b’ or replace all ‘a’ with ‘z’. And you are given the integer $k$ — the maximum number of operations that can be performed. Find the minimum lexicographically possible string that can be obtained by performing no more than $k$ operations.The string $a&#x3D;a_1a_2 \dots a_n$ is lexicographically smaller than the string $b &#x3D; b_1b_2 \dots b_n$ if there exists an index $k$ ($1 \le k \le n$) such that $a_1&#x3D;b_1$, $a_2&#x3D;b_2$, …, $a_{k-1}&#x3D;b_{k-1}$, but $a_k &lt; b_k$.</p><p>m次操作，每次都能把数组中的所有某一种字母换为其字典序较小的前一个字母。求m此操作后得到的串字典序最小的串</p><p>从前往后遍历贪心，如果碰见变换了k次还是不能到<code>a</code>的,就直接退出即可(贪心,靠前的小才会更小),当前的字母变成了减去k再减去之前能把前面变成<code>a</code>的最大的修改次数大小的字母,后面的小于改变前的和大于改变后的都可以,变成改变后的(较小的)</p><p>如果之前还存在改变了$\leq$ k次已经变成最小的<code>a</code>,则后面所有小于等于当前的都可以变成<code>a</code>,然后 取能把前面都变成最小的最大的次数.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, k, maxc = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">string s; cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] - k &gt; <span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line"><span class="type">char</span> c = s[i] - (k - maxc), r = s[i];</span><br><span class="line"><span class="comment">// debug(c, s[i]);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> ((s[j] &gt;= c) &amp;&amp; (s[j] &lt;= r)) s[j] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">maxc = <span class="built_in">max</span>(maxc, s[i] - <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] &lt;= maxc + <span class="string">&#x27;a&#x27;</span>) cout &lt;&lt; <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; s[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vlad-and-Unfinished-Business"><a href="#Vlad-and-Unfinished-Business" class="headerlink" title="Vlad and Unfinished Business"></a><a href="https://codeforces.com/contest/1675/problem/F">Vlad and Unfinished Business</a></h2><p>Vlad and Nastya live in a city consisting of $n$ houses and $n-1$ road. From each house, you can get to the other by moving only along the roads. That is, the city is a tree.Vlad lives in a house with index $x$, and Nastya lives in a house with index $y$. Vlad decided to visit Nastya. However, he remembered that he had postponed for later $k$ things that he has to do before coming to Nastya. To do the $i$-th thing, he needs to come to the $a_i$-th house, things can be done in any order. In $1$ minute, he can walk from one house to another if they are connected by a road.Vlad does not really like walking, so he is interested what is the minimum number of minutes he has to spend on the road to do all things and then come to Nastya. Houses $a_1, a_2, \dots, a_k$ he can visit in any order. He can visit any house multiple times (if he wants).</p><p>在一棵树上，起点为x最终到y，但是必须先经过一个点集，每走一步一个花费，问最小的花费是多少</p><p><img src="https://s2.loli.net/2022/05/09/U72i5ofHSbuZWdO.png"></p><ol><li><p>先以x为根节点遍历整个数,记录每个节点的父节点</p></li><li><p>在找到y到x的最短距离,并且标记走过的点,</p></li><li><p>然后把所有的必须要走的点往上走,如果碰到标记过的点就返回走的值,(可以理解为公共的路我只走一次), 返回走过的值*2因为要走一个来回</p></li></ol><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; g;</span><br><span class="line"><span class="type">int</span> p[N]; <span class="comment">// 记录父节点</span></span><br><span class="line"><span class="type">int</span> n, k, x, y;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_1</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">p[u] = fa;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> v : g[u]) </span><br><span class="line"><span class="keyword">if</span> (v != fa) <span class="built_in">dfs_1</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs_2</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (st[u] || u == x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">st[u] = <span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> res = <span class="built_in">dfs_2</span>(p[u]) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k &gt;&gt; x &gt;&gt; y;</span><br><span class="line">g.<span class="built_in">resize</span>(n + <span class="number">1</span>);</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(k)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> &amp;t : a) cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> u, v;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">g[u].<span class="built_in">emplace_back</span>(v);</span><br><span class="line">g[v].<span class="built_in">emplace_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs_1</span>(x, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="built_in">dfs_2</span>(y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> t : a) ans += <span class="built_in">dfs_2</span>(t) * <span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) g[i].<span class="built_in">clear</span>(), p[i] = <span class="number">0</span>, st[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Food-for-Animals&quot;&gt;&lt;a href=&quot;#Food-for-Animals&quot; class=&quot;headerlink&quot; title=&quot;Food for Animals&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codeforces.com/contes</summary>
      
    
    
    
    <category term="Codeforce" scheme="https://chiullian.cn/categories/Codeforce/"/>
    
    
  </entry>
  
  <entry>
    <title>CodeforcesRound#786(Div.3)</title>
    <link href="https://chiullian.cn/2022/05/06/CodeforcesRound-786-Div-3/"/>
    <id>https://chiullian.cn/2022/05/06/CodeforcesRound-786-Div-3/</id>
    <published>2022-05-06T15:25:34.000Z</published>
    <updated>2022-05-15T09:45:11.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Number-Transformation"><a href="#Number-Transformation" class="headerlink" title="Number Transformation"></a><a href="https://codeforces.com/contest/1674/problem/A">Number Transformation</a></h2><p>  You are given two integers $x$ and $y$. You want to choose two strictly positive (greater than zero) integers $a$ and $b$, and then apply the following operation to $x$ exactly $a$ times: replace $x$ with $b \cdot x$.You want to find two positive integers $a$ and $b$ such that $x$ becomes equal to $y$ after this process. If there are multiple possible pairs, you can choose any of them. If there is no such pair, report it.For example:   if $x &#x3D; 3$ and $y &#x3D; 75$, you may choose $a &#x3D; 2$ and $b &#x3D; 5$, so that $x$ becomes equal to $3 \cdot 5 \cdot 5 &#x3D; 75$;  if $x &#x3D; 100$ and $y &#x3D; 100$, you may choose $a &#x3D; 3$ and $b &#x3D; 1$, so that $x$ becomes equal to $100 \cdot 1 \cdot 1 \cdot 1 &#x3D; 100$;  if $x &#x3D; 42$ and $y &#x3D; 13$, there is no answer since you cannot decrease $x$ with the given operations. </p><p><strong>input</strong></p><p>The first line contains one integer $t$ ($1 \le t \le 10^4$) — the number of test cases.Each test case consists of one line containing two integers $x$ and $y$ ($1 \le x, y \le 100$).</p><p><strong>output</strong></p><p>If it is possible to choose a pair of positive integers $a$ and $b$ so that $x$ becomes $y$ after the aforementioned process, print these two integers. The integers you print should be not less than $1$ and not greater than $10^9$ (it can be shown that if the answer exists, there is a pair of integers $a$ and $b$ meeting these constraints). If there are multiple such pairs, print any of them.If it is impossible to choose a pair of integers $a$ and $b$ so that $x$ becomes $y$, print the integer $0$ twice.</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3 75</span><br><span class="line">100 100</span><br><span class="line">42 13</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">3 1</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><p>每日一氵</p><p>如果<code>y</code>能除得尽<code>x</code>我们直接令$a &#x3D; 1, b &#x3D; y % x$ 即可 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (y % x == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; y / x &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a><a href="https://codeforces.com/contest/1674/problem/B">Dictionary</a></h2><p>The Berland language consists of words having exactly two letters. Moreover, the first letter of a word is different from the second letter. Any combination of two different Berland letters (which, by the way, are the same as the lowercase letters of Latin alphabet) is a correct word in Berland language.The Berland dictionary contains all words of this language. The words are listed in a way they are usually ordered in dictionaries. Formally, word $a$ comes earlier than word $b$ in the dictionary if one of the following conditions hold:  </p><ul><li><p>the first letter of $a$ is less than the first letter of $b$;  </p></li><li><p>the first letters of $a$ and $b$ are the same, and the second letter of $a$ is less than the second letter of $b$.</p><p> So, the dictionary looks like that:</p></li><li><p>Word $1$: ab  </p></li><li><p>Word $2$: ac  </p></li><li><p>…  </p></li><li><p>Word $25$: az  </p></li><li><p>Word $26$: ba  </p></li><li><p>Word $27$: bc  </p></li><li><p>…  </p></li><li><p>Word $649$: zx  </p></li><li><p>Word $650$: zy </p><p>You are given a word $s$ from the Berland language. Your task is to find its index in the dictionary.</p><p><strong>input</strong></p><p>The first line contains one integer $t$ ($1 \le t \le 650$) — the number of test cases.Each test case consists of one line containing $s$ — a string consisting of exactly two different lowercase Latin letters (i. e. a correct word of the Berland language).</p><p><strong>output</strong></p><p>For each test case, print one integer — the index of the word $s$ in the dictionary.</p><p><strong>Samples</strong></p><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">ab</span><br><span class="line">ac</span><br><span class="line">az</span><br><span class="line">ba</span><br><span class="line">bc</span><br><span class="line">zx</span><br><span class="line">zy</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">649</span><br><span class="line">650</span><br></pre></td></tr></table></figure><p>打表出每一种情况即可 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> mp[<span class="number">256</span>][<span class="number">256</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line">cout &lt;&lt; mp[op[<span class="number">0</span>]][op[<span class="number">1</span>]] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> i = <span class="string">&#x27;a&#x27;</span>; i &lt;= <span class="string">&#x27;z&#x27;</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> j = <span class="string">&#x27;a&#x27;</span>; j &lt;= <span class="string">&#x27;z&#x27;</span>; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == j) <span class="keyword">continue</span>;</span><br><span class="line">mp[i][j] = cnt ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ___;</span><br><span class="line">cin &gt;&gt; ___;</span><br><span class="line"><span class="keyword">while</span> (___ --) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Infinite-Replacement"><a href="#Infinite-Replacement" class="headerlink" title="Infinite Replacement"></a><a href="https://codeforces.com/contest/1674/problem/C">Infinite Replacement</a></h2><p>You are given a string $s$, consisting only of Latin letters ‘a’, and a string $t$, consisting of lowercase Latin letters.In one move, you can replace any letter ‘a’ in the string $s$ with a string $t$. Note that after the replacement string $s$ might contain letters other than ‘a’.You can perform an arbitrary number of moves (including zero). How many different strings can you obtain? Print the number, or report that it is infinitely large.Two strings are considered different if they have different length, or they differ at some index.</p><p><strong>input</strong></p><p>The first line contains a single integer $q$ ($1 \le q \le 10^4$) — the number of testcases.The first line of each testcase contains a non-empty string $s$, consisting only of Latin letters ‘a’. The length of $s$ doesn’t exceed $50$.The second line contains a non-empty string $t$, consisting of lowercase Latin letters. The length of $t$ doesn’t exceed $50$.</p><p><strong>output</strong></p><p>For each testcase, print the number of different strings $s$ that can be obtained after an arbitrary amount of moves (including zero). If the number is infinitely large, print -1. Otherwise, print the number.</p><p><strong>Samples</strong></p><p>in</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">aaaa</span><br><span class="line">a</span><br><span class="line">aa</span><br><span class="line">abc</span><br><span class="line">a</span><br><span class="line">b</span><br></pre></td></tr></table></figure><p>out</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">-1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><blockquote><p>当换的中还存在a时肯定是无解的,因为能一直替换a,就有无限多个答案,除了只有一个的的情况</p><p>所以存在多少个a就有($2^{a的个数}$)</p></blockquote><h2 id="A-B-C-Sort"><a href="#A-B-C-Sort" class="headerlink" title="A-B-C Sort"></a><a href="https://codeforces.com/contest/1674/problem/D">A-B-C Sort</a></h2><p>You are given three arrays $a$, $b$ and $c$. Initially, array $a$ consists of $n$ elements, arrays $b$ and $c$ are empty.You are performing the following algorithm that consists of two steps:  </p><ul><li>Step $1$: while $a$ is not empty, you take the last element from $a$ and move it in the middle of array $b$. If $b$ currently has odd length, you can choose: place the element from $a$ to the left or to the right of the middle element of $b$. As a result, $a$ becomes empty and $b$ consists of $n$ elements.  </li><li>Step $2$: while $b$ is not empty, you take the middle element from $b$ and move it to the end of array $c$. If $b$ currently has even length, you can choose which of two middle elements to take. As a result, $b$ becomes empty and $c$ now consists of $n$ elements.</li></ul><p>Refer to the Note section for examples.Can you make array $c$ sorted in non-decreasing order?</p><p><strong>input</strong></p><p>The first line contains a single integer $t$ ($1 \le t \le 2 \cdot 10^4$) — the number of test cases. Next $t$ cases follow.The first line of each test case contains the single integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the length of array $a$.The second line of each test case contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^6$) — the array $a$ itself.It’s guaranteed that the sum of $n$ doesn’t exceed $2 \cdot 10^5$.</p><p><strong>output</strong></p><p>For each test, print YES (case-insensitive), if you can make array $c$ sorted in non-decreasing order. Otherwise, print NO (case-insensitive).</p><p><strong>Samples</strong></p><p>in</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">3 1 5 3</span><br><span class="line">3</span><br><span class="line">3 2 1</span><br><span class="line">1</span><br><span class="line">7331</span><br></pre></td></tr></table></figure><p>out</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">YES</span><br></pre></td></tr></table></figure><p>这..完全是凭感觉贪心啊,不知道咋写解释0.0, 谁能想到一下子就对了..</p><p>看见都是两个两个之间的关系,偶数不能确定,奇数能确定,(看长度为4时)推出后面小的一定要比前面大的大,不然往后更不成立</p><p><strong>代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)  cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span> || (n == <span class="number">2</span>)) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">3</span>; i -= <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">min</span>(a[i], a[i - <span class="number">1</span>]) &lt; <span class="built_in">max</span>(a[i - <span class="number">2</span>], a[i - <span class="number">3</span>])) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Desktop-Rearrangement"><a href="#Desktop-Rearrangement" class="headerlink" title="Desktop Rearrangement"></a><a href="https://codeforces.com/contest/1674/problem/F">Desktop Rearrangement</a></h2><p>Your friend Ivan asked you to help him rearrange his desktop. The desktop can be represented as a rectangle matrix of size $n \times m$ consisting of characters ‘.’ (empty cell of the desktop) and ‘*’ (an icon).The desktop is called good if all its icons are occupying some prefix of full columns and, possibly, the prefix of the next column (and there are no icons outside this figure). In other words, some amount of first columns will be filled with icons and, possibly, some amount of first cells of the next (after the last full column) column will be also filled with icons (and all the icons on the desktop belong to this figure). This is pretty much the same as the real life icons arrangement.In one move, you can take one icon and move it to any empty cell in the desktop.Ivan loves to add some icons to his desktop and remove them from it, so he is asking you to answer $q$ queries: what is the minimum number of moves required to make the desktop good after adding&#x2F;removing one icon?Note that queries are permanent and change the state of the desktop.</p><p><strong>input</strong></p><p>The first line of the input contains three integers $n$, $m$ and $q$ ($1 \le n, m \le 1000; 1 \le q \le 2 \cdot 10^5$) — the number of rows in the desktop, the number of columns in the desktop and the number of queries, respectively.The next $n$ lines contain the description of the desktop. The $i$-th of them contains $m$ characters ‘.’ and ‘*’ — the description of the $i$-th row of the desktop.The next $q$ lines describe queries. The $i$-th of them contains two integers $x_i$ and $y_i$ ($1 \le x_i \le n; 1 \le y_i \le m$) — the position of the cell which changes its state (if this cell contained the icon before, then this icon is removed, otherwise an icon appears in this cell).</p><p><strong>output</strong></p><p>Print $q$ integers. The $i$-th of them should be the minimum number of moves required to make the desktop good after applying the first $i$ queries.</p><p><strong>Samples</strong></p><p>in</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">4 4 8</span><br><span class="line">..**</span><br><span class="line">.*..</span><br><span class="line">*...</span><br><span class="line">...*</span><br><span class="line">1 3</span><br><span class="line">2 3</span><br><span class="line">3 1</span><br><span class="line">2 3</span><br><span class="line">3 4</span><br><span class="line">4 3</span><br><span class="line">2 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><p>out</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>题意就是把杂乱的桌面换成,按照想从左往右放,在从上往下放</p><p>这一题模拟即可的,我是把矩阵转化成,一维的数组即可如下</p><p><img src="https://s2.loli.net/2022/05/07/hH43qlnEk6mv5t8.png"></p><p>每次我们可以计算整个图中有多少点图标要放,然后通过个数计算出对应的结尾坐标,看结尾坐标前有多少已经是图标了,<code>总的图标</code>减去<code>已经在区域内的图标</code>就是<code>需要移动的图标</code>,我是想到用前缀和维护以x为结尾下标前面图标的数量,值为<code>*</code>的我们让他的值为1,’.’的值为0,然后计算前缀和,又因为它还有修改,所以我们就想到了用**<mark class="hl-label red">树状数组</mark> ** 来维护单点修改的前缀和</p><p><strong>代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tr[N], idx;</span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(x; x &lt;= N; x += x &amp; -x) tr[x] += c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> res = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(x; x; x -= x &amp; -x) res += tr[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> g[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++)</span><br><span class="line">cin &gt;&gt; g[i][j];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">a[++ idx] = g[i][j];</span><br><span class="line"><span class="keyword">if</span> (g[i][j] == <span class="string">&#x27;*&#x27;</span>) <span class="built_in">add</span>(idx, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (q --) &#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="type">int</span> t = (y - <span class="number">1</span>) * n + x;</span><br><span class="line"><span class="keyword">if</span> (a[t] == <span class="string">&#x27;*&#x27;</span>) <span class="built_in">add</span>(t, <span class="number">-1</span>), a[t] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">add</span>(t, <span class="number">1</span>), a[t] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(idx) - <span class="built_in">query</span>(<span class="built_in">query</span>(idx)) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Number-Transformation&quot;&gt;&lt;a href=&quot;#Number-Transformation&quot; class=&quot;headerlink&quot; title=&quot;Number Transformation&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codefo</summary>
      
    
    
    
    <category term="Codeforce" scheme="https://chiullian.cn/categories/Codeforce/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>go语言基础</title>
    <link href="https://chiullian.cn/2022/05/05/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    <id>https://chiullian.cn/2022/05/05/go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</id>
    <published>2022-05-05T02:26:59.000Z</published>
    <updated>2022-05-15T09:45:23.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><mark class="hl-label red">定义变量方式</mark> </h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定变量类型</span></span><br><span class="line"><span class="keyword">var</span> 变量名 变量类型</span><br><span class="line"><span class="keyword">var</span> age <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不指定变量类型, go语言自动推导类型</span></span><br><span class="line"><span class="keyword">var</span> level = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;666&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量申请变量</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">a <span class="type">int</span></span><br><span class="line">b <span class="type">float32</span></span><br><span class="line">c <span class="type">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简短格式 :</span></span><br><span class="line"><span class="comment">// 必须初始化</span></span><br><span class="line"><span class="comment">// 定义在函数内部</span></span><br><span class="line"><span class="comment">// 不提供数据类型</span></span><br><span class="line">i := <span class="number">1</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">var</span> level <span class="type">int</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不能重复定义, 下面是错误行为 XXX (特例下面会讲)</span></span><br><span class="line"><span class="keyword">var</span> level <span class="type">int</span> = <span class="number">1</span></span><br><span class="line">level := <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 特例:(在多个短变量声明和赋值钟,至少有一个新声明的变量出现在左值中,其他的变量名即使是重复的也不会报错)</span></span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br><span class="line">conn1, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量交换</span></span><br><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> b <span class="type">int</span> = <span class="number">200</span></span><br><span class="line">a, b = b, a</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用多赋值时, 如果不需要在左值中接收变量,可以使用匿名变量(_)一个下划线符号,接收但不要它</span></span><br><span class="line"><span class="comment">// 匿名变量不可以直接开头(_ := 1) XXX</span></span><br><span class="line">conn, _ := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作用域 </span></span><br><span class="line"><span class="comment">// 函数体外声明的变量就是全局变量,(一个源文件内定义就可以在所有的源文件内使用, 需import引入全局变量所在文件)</span></span><br><span class="line"><span class="comment">// 函数体内声明的就是局部变量</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="comment">// 声明全局变量</span></span><br><span class="line"><span class="keyword">var</span> v <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 声明局部变量</span></span><br><span class="line"><span class="keyword">var</span> a, b <span class="type">int</span></span><br><span class="line"><span class="comment">// 初始化参数</span></span><br><span class="line">a, b = <span class="number">10</span>, <span class="number">20</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%d: %d\n&quot;</span>, a, b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><mark class="hl-label red">变量类型</mark> </h2><ul><li>有符号整型: <code>int</code>, <code>int8</code>,<code>int32</code>,<code>int64</code>.</li><li>无符号整型: <code>uint</code>,<code>uint8</code>,<code>uint64</code>,<code>uint32</code>,<code>uintptr</code></li><li><code>float32</code>:范围约为$1.4e-45$到$3.4e+38$</li><li><code>float64</code>:范围约为$4.9e-324$到$1.8e+308$(优先使用)</li><li><code>bool</code>(<code>==</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;=</code>,<code>&amp;&amp;(AND)</code>, <code>||(OR)</code>)都会产生bool值(&amp;&amp;的优先级大于||)</li><li>字符类型:一种是无符号的<code>uint8</code>型,或者叫<code>byte</code>型,代表ASCII码的一个字符</li><li>字符类型:<code>rune</code>,代表一个<code>UTF-8</code>字符,处理中文及其他复合字符时使用时<code>rune</code>型,等价于<code>int32</code>型</li><li><mark class="hl-label red">注意:</mark> :`byte`类型是`uint8`的别名, `rune`类型是`int32`的别名</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单引号表示字符</span></span><br><span class="line"><span class="keyword">var</span> ch <span class="type">byte</span> = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="comment">// 十进制的65</span></span><br><span class="line"><span class="keyword">var</span> ch <span class="type">byte</span> = <span class="number">65</span></span><br><span class="line"><span class="comment">// 十六进制的65</span></span><br><span class="line"><span class="keyword">var</span> ch <span class="type">byte</span> = <span class="string">&#x27;\x41&#x27;</span></span><br><span class="line"><span class="comment">// 八进制的65</span></span><br><span class="line"><span class="keyword">var</span> ch <span class="type">byte</span> = <span class="string">&#x27;\101&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>Unicode(UTF-8)是ASCII的超集,包括文字母, GO支持,<code>用rune表示</code>,在内存中用int</li><li>在书写Unicode时,需要在16进制数之前加上<code>\u</code>或<code>\U</code>, 四字节使用<code>\u</code>前缀,八字节使用<code>\U</code>前缀</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ch <span class="type">rune</span> = <span class="string">&#x27;\u0041&#x27;</span> <span class="comment">// 也表示A字符</span></span><br><span class="line"><span class="keyword">var</span> ch <span class="type">rune</span> = <span class="string">&#x27;\U00000041&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>判断是否是字母: unicode.Isletter(ch)</li><li>判断是否为数字:unicode.IsDigit(ch)</li><li>判断是否为空白字符:unicode.IsSpace(ch)</li></ul><p><strong>字符串</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello,你好世界&quot;</span></span><br><span class="line"><span class="keyword">var</span> str1 [<span class="number">5</span>]<span class="type">byte</span> = [<span class="number">5</span>]<span class="type">byte</span>&#123;<span class="number">104</span>, <span class="number">101</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">111</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><code>\n</code>换行,<code>\r</code>回车, <code>\t</code> tab键, <code>\u</code>或<code>\U</code>:Unicode字符</li><li>占用几个字节计算(一个字母占用1个字节,一个中文占用3个字节) (len(str)返回是18)</li></ul><p><strong><mark class="hl-label red">计算字符长度</mark> </strong></p><ul><li>ASCII字符使用<code>len()</code>函数</li><li>Unicode字符长度使用utf8.RuneCountInString()</li></ul><p><strong>字符串拼接</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s := s1 + s2</span><br><span class="line">s += s3 <span class="comment">// 效率较低</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 另外一种</span></span><br><span class="line">s1 := <span class="string">&quot;hello&quot;</span></span><br><span class="line">s2 := <span class="string">&quot;世界&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> stringBuider bytes.Buffer</span><br><span class="line">stringBuider.WriteString(s1)</span><br><span class="line">stringBuider.WriteString(s2)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, stringBuider.String())</span><br></pre></td></tr></table></figure><p>获取Unicode字符串的字方法</p><p>强制把string型转化成rune数组型,然后获取下标,在强制转化成串</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s2 := <span class="string">&quot;lo,你好&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, <span class="type">string</span>([]<span class="type">rune</span>(s2)[<span class="number">4</span>]))</span><br><span class="line"><span class="comment">// 输出 :好</span></span><br></pre></td></tr></table></figure><p> go语言中字符串是不可变的我们可以强制转化成byte数组进行修改</p><p> 把<code>好</code>换成<code>我</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str := <span class="string">&quot;65463你好&quot;</span></span><br><span class="line">b := []<span class="type">rune</span>(str)</span><br><span class="line">b[utf8.RuneCountInString(str)<span class="number">-1</span>] = <span class="string">&#x27;我&#x27;</span></span><br><span class="line">str = <span class="type">string</span>(b)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, str)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把<code>5</code>换成<code>6</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;12345&quot;</span></span><br><span class="line">a := []<span class="type">byte</span>(s)</span><br><span class="line">a[<span class="built_in">len</span>(a)<span class="number">-1</span>] = <span class="string">&#x27;6&#x27;</span></span><br><span class="line">st := <span class="type">string</span>(a)</span><br><span class="line">fmt.Println(st)</span><br></pre></td></tr></table></figure><p>将<code>hello world,我要学java语言</code>改成<code>hello world,我要学go语言</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str := <span class="string">&quot;hello world,我要学java语言&quot;</span></span><br><span class="line">t := <span class="string">&quot;java&quot;</span></span><br><span class="line">two := <span class="string">&quot;go&quot;</span></span><br><span class="line"></span><br><span class="line">idx := strings.Index(str, t)</span><br><span class="line">one := str[:idx]</span><br><span class="line">three := str[idx+<span class="built_in">len</span>(t):]</span><br><span class="line"><span class="keyword">var</span> x bytes.Buffer</span><br><span class="line">x.WriteString(one)</span><br><span class="line">x.WriteString(two)</span><br><span class="line">x.WriteString(three)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s&quot;</span>, x.String())</span><br></pre></td></tr></table></figure><p><strong><mark class="hl-label red">指针</mark> </strong></p><p>用法跟c一样给点代码理解</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">100</span></span><br><span class="line">modify(&amp;a)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d&quot;</span>, a)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modify</span><span class="params">(x *<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">*x = <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出200</span></span><br></pre></td></tr></table></figure><p>新的指针定义方式new()</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ptr := <span class="built_in">new</span>(<span class="type">string</span>) <span class="comment">// var ptr *string = new(string)</span></span><br><span class="line">*ptr = <span class="string">&quot;hello你好&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, *ptr)</span><br></pre></td></tr></table></figure><p><strong><mark class="hl-label red">类型别名</mark> </strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> NewInt <span class="type">int</span></span><br><span class="line"><span class="keyword">type</span> New = <span class="type">int</span> </span><br></pre></td></tr></table></figure><p><strong><mark class="hl-label red">字符串转数字</mark> </strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str := <span class="string">&quot;666&quot;</span></span><br><span class="line">intValue, _ := strconv.Atoi(str)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d\n&quot;</span>, intValue)</span><br><span class="line"></span><br><span class="line">str := <span class="string">&quot;3.141592653589&quot;</span></span><br><span class="line">floatValue, _ := strconv.ParseFloat(str, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%f\n&quot;</span>, floatValue)</span><br></pre></td></tr></table></figure><p><strong><mark class="hl-label red">数字转字符串</mark> </strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">intValue := <span class="number">1</span></span><br><span class="line">strValue := strconv.Itoa(intValue)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, strValue)</span><br><span class="line"></span><br><span class="line">fValue := <span class="number">3.141592653589</span></span><br><span class="line">strValue := strconv.FormatFloat(fValue, <span class="string">&#x27;f&#x27;</span>, <span class="number">2</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, strValue)</span><br></pre></td></tr></table></figure><p> <strong><mark class="hl-label red">标准输入</mark> </strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reader := bufio.NewReader(os.Stdin)</span><br><span class="line">input, err := reader.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong><mark class="hl-label red">数组</mark> </strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/// 一位数组</span></span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">10</span>]<span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> idx, val := <span class="keyword">range</span> arr &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;索引 : %d, 值: %d\n&quot;</span>, idx, val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> idx, val := <span class="keyword">range</span> arr &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;索引 : %d, 值: %d\n&quot;</span>, idx, val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简短初始化</span></span><br><span class="line">a := [...]<span class="type">int</span>&#123;<span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>&#125;</span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> a &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d\n&quot;</span>, val)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化第三个是3</span></span><br><span class="line">a := [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">2</span>:<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二维数组</span></span><br><span class="line">str4 := [<span class="number">3</span>][<span class="number">2</span>]<span class="type">rune</span>&#123;&#123;<span class="string">&#x27;你&#x27;</span>, <span class="string">&#x27;真&#x27;</span>&#125;, &#123;<span class="string">&#x27;的&#x27;</span>, <span class="string">&#x27;好&#x27;</span>&#125;, &#123;<span class="string">&#x27;强&#x27;</span>, <span class="string">&#x27;啊&#x27;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> str4 &#123;</span><br><span class="line"><span class="keyword">for</span> _, val2 := <span class="keyword">range</span> val &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c &quot;</span>, val2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str2 [<span class="number">2</span>][<span class="number">2</span>]<span class="type">int</span> = [<span class="number">2</span>][<span class="number">2</span>]<span class="type">int</span>&#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">4</span>&#125;&#125;</span><br><span class="line"><span class="comment">//str := [4][2]int&#123;&#123;1, 2&#125;, &#123;3, 4&#125;, &#123;5, 6&#125;, &#123;7, 8&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> str2 &#123;</span><br><span class="line"><span class="keyword">for</span> _, val2 := <span class="keyword">range</span> val &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d &quot;</span>, val2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;mark class=&quot;hl-label red&quot;&gt;定义变量方式&lt;/mark&gt; &lt;/h2&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="go语言" scheme="https://chiullian.cn/categories/go%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="go语言" scheme="https://chiullian.cn/tags/go%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Kuangbin线段树专题</title>
    <link href="https://chiullian.cn/2022/05/04/Kuangbin%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%B8%93%E9%A2%98/"/>
    <id>https://chiullian.cn/2022/05/04/Kuangbin%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%B8%93%E9%A2%98/</id>
    <published>2022-05-04T12:11:31.000Z</published>
    <updated>2022-05-15T09:45:34.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>先交出个人常用的线段树模板(<strong>单点修改</strong>与<strong>区间修改</strong>两种)</p><blockquote><p>pushup 子节点更新父节点</p><p>pushdown父节点更新子节点</p></blockquote><h4 id="单点修改"><a href="#单点修改" class="headerlink" title="单点修改"></a>单点修改</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val; <span class="comment">//</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123; <span class="comment">//</span></span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> x, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l == x &amp;&amp; tr[u].r == x) </span><br><span class="line"><span class="keyword">return</span> tr[u].val = tr[u].val + v, <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, x, v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, x, v);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res; </span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Segment_Tree st;</span><br></pre></td></tr></table></figure><h4 id="区间修改懒标记-优先级高"><a href="#区间修改懒标记-优先级高" class="headerlink" title="区间修改懒标记(优先级高)"></a>区间修改懒标记(优先级高)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val, add = <span class="number">0</span>; <span class="comment">// val:维护的数据</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> tr[u].r - tr[u].l + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(Node u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> u.r - u.l + <span class="number">1</span>;    <span class="comment">// sum = len * change(值)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</span></span><br><span class="line"><span class="comment">// 分为：产生影响+懒标记下放</span></span><br><span class="line"><span class="comment">// 根的懒标记清空</span></span><br><span class="line"><span class="keyword">if</span> (!u.add) <span class="keyword">return</span>;</span><br><span class="line">l.add += u.add, r.add += u.add;</span><br><span class="line">l.val += (<span class="type">long</span> <span class="type">long</span>) <span class="built_in">len</span>(l) * u.add;</span><br><span class="line">r.val += (<span class="type">long</span> <span class="type">long</span>) <span class="built_in">len</span>(r) * u.add;</span><br><span class="line">u.add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123; <span class="comment">// do sth</span></span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r) &#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">tr[u].add += c;</span><br><span class="line">tr[u].val += <span class="built_in">len</span>(u) * c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Segment_Tree st;</span><br></pre></td></tr></table></figure><h2 id="AcWing敌兵布阵-单点修改区间查询和"><a href="#AcWing敌兵布阵-单点修改区间查询和" class="headerlink" title="AcWing敌兵布阵(单点修改区间查询和)"></a><a href="https://www.acwing.com/problem/content/4342/">AcWing敌兵布阵(单点修改区间查询和)</a></h2><p>敌人有 $N$ 个工兵营地，编号 $1∼N$。</p><p>初始时，第 $i$ 个营地有 $a_i$ 个人。</p><p>接下来有若干个命令，命令有 44 种形式：</p><ul><li><code>Add i j</code>，$i$ 和 $j$ 为正整数，表示第 $i$ 个营地增加 $j$ 个人。（$j$不超过 $30$）</li><li><code>Sub i j</code>，$i$ 和 $j$ 为正整数，表示第 $i$ 个营地减少 $j$ 个人。（$j$不超过 $30$）</li><li><code>Query i j</code>，$i$ 和 $j$ 为正整数（$i≤j$），表示询问第$i$ 到第 $j$ 个营地的总人数。</li><li><code>End</code>，表示结束，此命令只会作为<strong>最后一条</strong>命令出现。</li></ul><p>请你计算每个 <code>Query</code> 的答案。</p><p>板子不多说</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val; <span class="comment">//</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123; <span class="comment">//</span></span><br><span class="line">u.val = l.val + r.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> x, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l == x &amp;&amp; tr[u].r == x) </span><br><span class="line"><span class="keyword">return</span> tr[u].val = tr[u].val + v, <span class="built_in">void</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, x, v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, x, v);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res; </span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125; tree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> t)</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; t &lt;&lt; <span class="string">&#x27;:&#x27;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; tree.a[i];</span><br><span class="line">tree.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; s, s != <span class="string">&quot;End&quot;</span>) &#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line">cin &gt;&gt; i &gt;&gt; j;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="string">&quot;Add&quot;</span>) &#123;</span><br><span class="line">tree.<span class="built_in">modify</span>(<span class="number">1</span>, i, j);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (s == <span class="string">&quot;Sub&quot;</span>) &#123;</span><br><span class="line">tree.<span class="built_in">modify</span>(<span class="number">1</span>, i, -j);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; tree.<span class="built_in">query</span>(<span class="number">1</span>, i, j).val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> T, cnt = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T --) <span class="built_in">solve</span>(cnt), cnt ++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4340-我讨厌它-单点修改区间查询max"><a href="#AcWing-4340-我讨厌它-单点修改区间查询max" class="headerlink" title="AcWing 4340. 我讨厌它(单点修改区间查询max)"></a><a href="https://www.acwing.com/problem/content/4343/">AcWing 4340. 我讨厌它(单点修改区间查询max)</a></h2><p>很多学校流行一种比较的习惯。</p><p>老师们很喜欢询问，从某某到某某当中，分数最高的是多少。</p><p>这让很多学生很反感。</p><p>不管你喜不喜欢，现在需要你做的是，就是按照老师的要求，写一个程序，模拟老师的询问。</p><p>当然，老师有时候需要更新某位同学的成绩。</p><p><strong>输入格式</strong></p><p>本题目包含多组测试，请处理到文件结束。</p><p>在每个测试的第一行，有两个正整数 $N$ 和 $M$，分别代表学生的数目和操作的数目。</p><p>学生 ID 编号分别从 $1$ 编到 $N$。</p><p>第二行包含 $N$ 个整数，代表这 $N$ 个学生的初始成绩，其中第 $i$ 个数代表 ID 为 $i$ 的学生的成绩。</p><p>接下来有 $M$ 行。每一行有一个字符 $C$（只取 <code>Q</code> 或 <code>U</code>），和两个正整数 $A,B$。</p><p>当 $C$ 为 <code>Q</code> 的时候，表示这是一条询问操作，它询问 ID 从 $A$ 到 $B$（包括 $A,B$）的学生当中，成绩最高的是多少。</p><p>当 $C$ 为 <code>U</code> 的时候，表示这是一条更新操作，要求把 ID 为 $A$ 的学生的成绩更改为 $B$。</p><p><strong>输出格式</strong><br>对于每一次询问操作，在一行里面输出最高成绩。</p><p>pushup的时候按照最大值即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val; <span class="comment">//</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123; <span class="comment">//</span></span><br><span class="line">u.val = <span class="built_in">max</span>(l.val, r.val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> x, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l == x &amp;&amp; tr[u].r == x) <span class="keyword">return</span> tr[u].val = v, <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, x, v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, x, v);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125; st;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; st.a[i];</span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (m --) &#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">&#x27;Q&#x27;</span>) cout &lt;&lt; st.<span class="built_in">query</span>(<span class="number">1</span>, x, y).val &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> st.<span class="built_in">modify</span>(<span class="number">1</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-243-一个简单的整数问题2-区间修改-区间查询和"><a href="#AcWing-243-一个简单的整数问题2-区间修改-区间查询和" class="headerlink" title="AcWing 243. 一个简单的整数问题2(区间修改+,区间查询和)"></a><a href="https://www.acwing.com/problem/content/244/">AcWing 243. 一个简单的整数问题2(区间修改+,区间查询和)</a></h2><p>给定一个长度为 <em>N</em> 的数列 <em>A</em>，以及 <em>M</em> 条指令，每条指令可能是以下两种之一：</p><ol><li><code>C l r d</code>，表示把 <em>A</em>[<em>l</em>],<em>A</em>[<em>l</em>+1],…,<em>A</em>[<em>r</em>] 都加上 <em>d</em>。</li><li><code>Q l r</code>，表示询问数列中第 <em>l</em>∼<em>r</em> 个数的和。</li></ol><p>对于每个询问，输出一个整数表示答案。</p><p>区间修改的板子</p><p>pushdown操作的解释: </p><p>将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</p><p>分为：产生影响+懒标记下放</p><p>产生的影响是儿子区间内所有的数的总和增加了$区间的长度×增加值$</p><p>根的懒标记清空</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> val, add = <span class="number">0</span>; <span class="comment">// val:维护的数据</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line">u.val = l.val + r.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</span></span><br><span class="line"><span class="comment">// 分为：产生影响+懒标记下放</span></span><br><span class="line"><span class="comment">// 根的懒标记清空</span></span><br><span class="line"><span class="keyword">if</span> (!u.add) <span class="keyword">return</span>;</span><br><span class="line">l.add += u.add, r.add += u.add;</span><br><span class="line">l.val += (<span class="type">long</span> <span class="type">long</span>) (l.r - l.l + <span class="number">1</span>) * u.add;</span><br><span class="line">r.val += (<span class="type">long</span> <span class="type">long</span>) (r.r - r.l + <span class="number">1</span>) * u.add;</span><br><span class="line">u.add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r) &#123;</span><br><span class="line">tr[u].add += c;</span><br><span class="line">tr[u].val += (tr[u].r - tr[u].l + <span class="number">1</span>) * c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Segment_Tree st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; st.a[i];</span><br><span class="line"></span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (m --) &#123;</span><br><span class="line"><span class="type">char</span> op;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;Q&#x27;</span>) &#123;</span><br><span class="line">cout &lt;&lt; st.<span class="built_in">query</span>(<span class="number">1</span>, l, r).val &lt;&lt; endl;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">st.<span class="built_in">modify</span>(<span class="number">1</span>, l, r, x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4341-市长海报-离散化-区间修改成某个数字查询数字种类个数"><a href="#AcWing-4341-市长海报-离散化-区间修改成某个数字查询数字种类个数" class="headerlink" title="AcWing 4341. 市长海报(离散化+区间修改成某个数字查询数字种类个数)"></a><a href="https://www.acwing.com/problem/content/4344/">AcWing 4341. 市长海报(离散化+区间修改成某个数字查询数字种类个数)</a></h2><p>在一个市长选举宣传墙上，有 $n$ 张海报正等待着秘书依次张贴。</p><p>所有海报都与墙面等高。</p><p>整个墙面被等分为若干段，从左到右依次编号为 $1,2,3…$。</p><p>每张海报都恰好完全覆盖连续若干段墙面，其中第 ii 张海报覆盖第$l_i∼r_i$段墙面。</p><p>当所有海报都张贴完毕以后，其中一些海报可能会被后面的海报覆盖掉。</p><p>请你计算，最终一共有多少张海报（完全或部分）可见。</p><p><strong>输入格式</strong></p><p>第一行包含整数 $T$，表示共有 $T$ 组测试数据。</p><p>每组数据第一行包含整数 $n$。</p><p>接下来  $n$ 行，每行包含两个整数 $l_i,r_i$，表示一张海报的覆盖区域。</p><p><strong>输出格式</strong></p><p>每组数据输出一行结果，一个整数，表示最终可见的海报数量。</p><p>思路:</p><blockquote><p>每次把修改的区间标记成当前的编号,看最后区间内还剩下多少个编号种类可以看见,数据范围太大,而且数据量不大,离散化即可.</p><p>这里还有一个特殊的情况就是处理一号$23$区间,二号45区间和三号$25$区间,按照正常的区间修改,最后是能看见第一个和第二个区间,然而事实上第三个区间也能看到,所以我们可以把$r + 1$也进行离散化及分别对$l,r,r+1$进行离散化,利用$r+1$判断是否是这种情况</p><p>这里的pushdown操作解释:</p><p>产生影响+懒标记下放</p><p>产生的影响</p><blockquote><p>把儿子节点的编号全部染成父节点的编号,然后在给儿子标记再往下递归</p></blockquote><p>根的懒标记清空</p></blockquote><p><img src="https://s2.loli.net/2022/05/04/FzJASETCXUPWgIK.png"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; alls;</span><br><span class="line"><span class="type">bool</span> ok[N];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val, add = <span class="number">0</span>; <span class="comment">// val:维护的数据</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</span></span><br><span class="line"><span class="comment">// 分为：产生影响+懒标记下放</span></span><br><span class="line"><span class="comment">// 根的懒标记清空</span></span><br><span class="line"><span class="keyword">if</span> (!u.add) <span class="keyword">return</span>;</span><br><span class="line">l.add = u.add;</span><br><span class="line">r.add = u.add;</span><br><span class="line">l.val = u.add;</span><br><span class="line">r.val = u.add;</span><br><span class="line">u.add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = <span class="number">0</span>, <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r) &#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">tr[u].add = c;</span><br><span class="line">tr[u].val = c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) &#123;</span><br><span class="line"><span class="keyword">return</span> tr[u].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Segment_Tree st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_id</span><span class="params">(<span class="type">const</span> <span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">lower_bound</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>(), x) - alls.<span class="built_in">begin</span>() + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T --) &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;PII&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">alls.<span class="built_in">clear</span>();</span><br><span class="line"><span class="built_in">memset</span>(st.tr, <span class="number">0</span>, <span class="keyword">sizeof</span> st.tr);</span><br><span class="line"><span class="built_in">memset</span>(ok, <span class="literal">false</span>, <span class="keyword">sizeof</span> ok);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : a) &#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">alls.<span class="built_in">emplace_back</span>(x);</span><br><span class="line">alls.<span class="built_in">emplace_back</span>(y);</span><br><span class="line">alls.<span class="built_in">emplace_back</span>(y + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>());</span><br><span class="line">alls.<span class="built_in">erase</span>(<span class="built_in">unique</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()), alls.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// for (auto x : alls) cout &lt;&lt; x &lt;&lt; endl;</span></span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, alls.<span class="built_in">size</span>() + <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="type">int</span> L = <span class="built_in">get_id</span>(a[i].first), R = <span class="built_in">get_id</span>(a[i].second);</span><br><span class="line">st.<span class="built_in">modify</span>(<span class="number">1</span>, L, R, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">set&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= alls.<span class="built_in">size</span>(); i ++)  &#123;</span><br><span class="line"><span class="keyword">if</span> (st.<span class="built_in">query</span>(<span class="number">1</span>, i, i)) S.<span class="built_in">insert</span>(st.<span class="built_in">query</span>(<span class="number">1</span>, i, i));</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; S.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4342-就一勾子-区间修改数字-区间查询和"><a href="#AcWing-4342-就一勾子-区间修改数字-区间查询和" class="headerlink" title="AcWing 4342. 就一勾子(区间修改数字,区间查询和)"></a><a href="https://www.acwing.com/problem/content/4345/">AcWing 4342. 就一勾子(区间修改数字,区间查询和)</a></h2><p>在 DotA 这个游戏中，帕吉（屠夫、胖子）的钩子让很多英雄闻风丧胆。</p><p><img src="https://cdn.acwing.com/media/article/image/2022/03/01/19_1cc0a8c299-1.jpg" alt="1.jpg"></p><p>帕吉的钩子是由 nn 个连续的等长金属棒拼接而成。</p><p>这些金属棒不妨编号为 $1∼n$。</p><p>最开始时，所有金属棒都是铜棒。</p><p>现在，帕吉要对他的钩子进行 $Q$ 次更改操作，操作分为以下三种：</p><ul><li><code>l r 1</code>，表示将第 $l∼r$ 个金属棒换成铜棒。</li><li><code>l r 2</code>，表示将第 $l∼r$ 个金属棒换成银棒。</li><li><code>l r 3</code>，表示将第 $l∼r$ 个金属棒换成金棒。</li></ul><p>每根铜棒的价值为 $1$，每根银棒的价值为 $2$，每根金棒的价值为 $3$。</p><p>钩子的总价值等于 $n$ 个金属棒的价值之和。</p><p>请你计算所有操作完成以后，钩子的总价值。</p><p>pushdown操作解释</p><blockquote><p>分为：产生影响+懒标记下放</p><p>产生的影响是 维护的区间和就是$区间的长度×修改的价值$</p><p>根的懒标记清空</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val, add = <span class="number">0</span>; <span class="comment">// val:维护的数据</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123; <span class="keyword">return</span> tr[u].r - tr[u].l + <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(Node u)</span> </span>&#123; <span class="keyword">return</span> u.r - u.l + <span class="number">1</span>; &#125; <span class="comment">// sum = len * change(值)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">u.val = l.val + r.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</span></span><br><span class="line"><span class="comment">// 分为：产生影响+懒标记下放</span></span><br><span class="line"><span class="comment">// 根的懒标记清空</span></span><br><span class="line"><span class="keyword">if</span> (!u.add) <span class="keyword">return</span>;</span><br><span class="line">l.add = u.add, r.add = u.add;</span><br><span class="line">l.val = <span class="built_in">len</span>(l) * u.add, r.val = <span class="built_in">len</span>(r) * u.add;</span><br><span class="line">u.add = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = <span class="number">1</span>, <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r) &#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">tr[u].add = c;</span><br><span class="line">tr[u].val = <span class="built_in">len</span>(u) * c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Segment_Tree st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> cnt)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(st.tr, <span class="number">0</span>, <span class="keyword">sizeof</span> st.tr);</span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">while</span> (m --) &#123;</span><br><span class="line"><span class="type">int</span> l, r, c;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">st.<span class="built_in">modify</span>(<span class="number">1</span>, l, r, c);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&quot;: The total value of the hook is &quot;</span></span><br><span class="line"> &lt;&lt; st.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n).val &lt;&lt; <span class="string">&#x27;.&#x27;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= T; i ++) <span class="built_in">solve</span>(i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4343-数颜色-区间修改"><a href="#AcWing-4343-数颜色-区间修改" class="headerlink" title="AcWing 4343. 数颜色(区间修改)"></a><a href="https://www.acwing.com/problem/content/4346/">AcWing 4343. 数颜色(区间修改)</a></h2><p>我们要在一个数轴上绘制 $n$ 个彩色线段。</p><p>先绘制的线段可能会被后绘制的线段覆盖。</p><p>你的任务是统计最终可以看到的不同颜色的线段。</p><p><strong>输入格式</strong></p><p>输入包含多组测试数据。</p><p>每组数据第一行包含整数 $n$。</p><p>接下来 $n$ 行，每行包含三个整数 $l,r,c$，表示绘制左右端点坐标分别为$l,r$ 的颜色为 $c$ 的线段。</p><p>思路</p><p><strong>思路:</strong></p><p><img src="C:\Users\恋恋\AppData\Roaming\Typora\typora-user-images\image-20220504211426022.png"></p><p>根据此图我们可以看到一个小技巧就是把做区间$l + 1$</p><p>这样区间$0-4$就可以表示成第1,2,3,4段,然后在进行区间修改查询即可</p><p>附:这里的懒标记以及原始数组要初始化成-1因为0有意义(还有一点就是连续相等的区间算一段不算多段)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">8e3</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val, add = <span class="number">-1</span>; <span class="comment">// val:维护的数据</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> tr[u].r - tr[u].l + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">len</span><span class="params">(Node u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> u.r - u.l + <span class="number">1</span>;    <span class="comment">// sum = len * change(值)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 将线段树的节点的懒标记下放到儿子上，根节点的懒标记清空</span></span><br><span class="line"><span class="comment">// 分为：产生影响+懒标记下放</span></span><br><span class="line"><span class="comment">// 根的懒标记清空</span></span><br><span class="line"><span class="keyword">if</span> (u.add == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">l.add = u.add, r.add = u.add;</span><br><span class="line">l.val = u.add;</span><br><span class="line">r.val = u.add;</span><br><span class="line">u.add = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123; <span class="comment">// do sth</span></span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = <span class="number">-1</span>, <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r) &#123;</span><br><span class="line"><span class="comment">// do sth</span></span><br><span class="line">tr[u].add = c;</span><br><span class="line">tr[u].val = c;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, c);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Segment_Tree st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line"><span class="built_in">memset</span>(st.tr, <span class="number">-1</span>, <span class="keyword">sizeof</span> st.tr);</span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, N);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> l, r, c;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">l ++;</span><br><span class="line">st.<span class="built_in">modify</span>(<span class="number">1</span>, l, r, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(N)</span></span>;</span><br><span class="line"><span class="type">int</span> pre = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++) &#123;</span><br><span class="line"><span class="type">int</span> t = st.<span class="built_in">query</span>(<span class="number">1</span>, i, i).val;</span><br><span class="line"><span class="comment">// cout &lt;&lt; i &lt;&lt; &#x27; &#x27; &lt;&lt; t &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (t != pre) ans[t] ++;</span><br><span class="line">pre = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans[i]) cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; ans[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-1274-奶牛排队-区间max-min"><a href="#AcWing-1274-奶牛排队-区间max-min" class="headerlink" title="AcWing 1274. 奶牛排队(区间max,min)"></a><a href="https://www.acwing.com/problem/content/1276/">AcWing 1274. 奶牛排队(区间max,min)</a></h2><p>每天，农夫 John 的 $N$ 头牛总是按同一序列排队。</p><p>有一天，John 决定让一些牛玩一场飞盘比赛。</p><p>他准备找一群在队列中位置连续的牛来进行比赛，但是为了避免水平悬殊，牛的身高不应该相差太大。</p><p>John 准备了 $Q$ 个可能的牛的选择和所有牛的身高。</p><p>他想知道每一组里面最高和最矮的牛的身高差别。</p><p><strong>模板</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="type">int</span> val, valn; <span class="comment">//</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123; <span class="comment">//</span></span><br><span class="line">u.val = <span class="built_in">max</span>(l.val, r.val);</span><br><span class="line">u.valn = <span class="built_in">min</span>(l.valn, r.valn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = tr[u].valn = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res; </span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; st.a[i];</span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (q --) &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="keyword">auto</span> t = st.<span class="built_in">query</span>(<span class="number">1</span>, l, r);</span><br><span class="line"><span class="comment">// cout &lt;&lt; t.val &lt;&lt; &#x27; &#x27; &lt;&lt; t.valn &lt;&lt; endl;</span></span><br><span class="line">cout &lt;&lt; t.val - t.valn &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4344-你能回答这些问题吗-区间开平方-区间查询和"><a href="#AcWing-4344-你能回答这些问题吗-区间开平方-区间查询和" class="headerlink" title="AcWing 4344. 你能回答这些问题吗(区间开平方,区间查询和)"></a><a href="https://www.acwing.com/problem/content/4347/">AcWing 4344. 你能回答这些问题吗(区间开平方,区间查询和)</a></h2><p>$n$ 个敌方战舰排成一排，依次编号 $1∼n$。</p><p>第 $i$ 个敌方战舰的初始血量为 $ei$。</p><p>下面，我方将对敌方战舰采取 $m$ 个操作，操作分为以下两种：</p><ul><li><code>0 x y</code>，将第 $x$ 个战舰和第 $y$ 个战舰之间的所有战舰（包含两端战舰）的血量开平方（平方根运算应向下取整）。</li><li><code>1 x y</code>，询问第 $x$ 个战舰和第 $y$ 个战舰之间的所有战舰（包含两端战舰）的现有血量之和。</li></ul><p>请你计算并回答所有询问操作。</p><p>这题直接进行进行懒标记应该不太能直接处理(我是真真想不出T_T),所以看别人的题解才会0.0,&#x2F;优美的暴力</p><p>因为这一题是开根号所以一个点最多改8次,所以当我们区间查询和与长度一样的时候答案是不会在变了,所以直接return(太妙了0.0我反正想不出)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r - tr[u].l + <span class="number">1</span> == tr[u].val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r &amp;&amp; tr[u].l == tr[u].r) &#123;</span><br><span class="line">tr[u].val = <span class="built_in">sqrt</span>(tr[u].val); <span class="comment">// 相当于全部递归成单点修改O(n)复杂度</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)<span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment_Tree</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line">LL val; <span class="comment">//</span></span><br><span class="line">&#125; tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line">LL a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(Node &amp;u, Node &amp;l, Node &amp;r)</span> </span>&#123; <span class="comment">//</span></span><br><span class="line">u.val = l.val + r.val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="built_in">pushup</span>(tr[u], tr[u &lt;&lt; <span class="number">1</span>], tr[u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">tr[u].r = r, tr[u].l = l;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span> tr[u].val = a[l], <span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r - tr[u].l + <span class="number">1</span> == tr[u].val) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r &amp;&amp; tr[u].l == tr[u].r) &#123;</span><br><span class="line">tr[u].val = <span class="built_in">sqrt</span>(tr[u].val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)<span class="built_in">modify</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="built_in">pushup</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].r &lt;= r &amp;&amp; tr[u].l &gt;= l) <span class="keyword">return</span> tr[u];</span><br><span class="line"><span class="type">int</span> mid = (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid) <span class="keyword">return</span> <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> left = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">auto</span> right = <span class="built_in">query</span>(u &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res;</span><br><span class="line"><span class="built_in">pushup</span>(res, left, right);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n, T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; T &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; st.a[i];</span><br><span class="line">st.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="type">int</span> m, op, x, y;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) &#123;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (x &gt; y) <span class="built_in">swap</span>(x, y);</span><br><span class="line"><span class="keyword">if</span> (op) &#123;</span><br><span class="line">cout &lt;&lt; st.<span class="built_in">query</span>(<span class="number">1</span>, x, y).val &lt;&lt; endl;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">st.<span class="built_in">modify</span>(<span class="number">1</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">T ++;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;模板&quot;&gt;&lt;a href=&quot;#模板&quot; class=&quot;headerlink&quot; title=&quot;模板&quot;&gt;&lt;/a&gt;模板&lt;/h2&gt;&lt;p&gt;先交出个人常用的线段树模板(&lt;strong&gt;单点修改&lt;/strong&gt;与&lt;strong&gt;区间修改&lt;/strong&gt;两种)&lt;/p&gt;
&lt;bloc</summary>
      
    
    
    
    <category term="Kuangbin题单" scheme="https://chiullian.cn/categories/Kuangbin%E9%A2%98%E5%8D%95/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="https://chiullian.cn/tags/c/"/>
    
    <category term="Kuangbin题单" scheme="https://chiullian.cn/tags/Kuangbin%E9%A2%98%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>AcWing第49场周赛</title>
    <link href="https://chiullian.cn/2022/05/02/AcWing%E7%AC%AC49%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <id>https://chiullian.cn/2022/05/02/AcWing%E7%AC%AC49%E5%9C%BA%E5%91%A8%E8%B5%9B/</id>
    <published>2022-05-01T16:41:49.000Z</published>
    <updated>2022-05-15T09:46:00.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-4413-组队"><a href="#AcWing-4413-组队" class="headerlink" title="AcWing 4413. 组队"></a><a href="">AcWing 4413. 组队</a></h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定 $n$ 个整数 $y1,y2,…,yn$，及一个整数$k$。</p><p>先求出有多少个 $yi$ 满足 $yi+k≤5$，然后输出满足要求的 $yi$ 的个数除以 $3$ 下取整的值。</p><p><strong>模拟即可</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n, ans = <span class="number">0</span>, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> &amp;x : a) &#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (x + k &lt;= <span class="number">5</span>) ans ++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans / <span class="number">3</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4414-子序列"><a href="#AcWing-4414-子序列" class="headerlink" title="AcWing 4414. 子序列"></a><a href="https://www.acwing.com/problem/content/4417/">AcWing 4414. 子序列</a></h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个长度为 $n$ 的整数序列 $a1,a2,…,an$。</p><p>请你找到一个该序列的子序列，要求：</p><ol><li>该子序列的所有元素之和必须是奇数。</li><li>在满足条件 $1$ 的前提下，该子序列的所有元素之和应尽可能大。</li></ol><p>输出你找到的满足条件的子序列的所有元素之和。</p><p>保证至少存在一个满足条件的子序列。</p><p>注意，子序列不一定连续。</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>只要因为大于零想加是单调递增的, 那么就可以吧把所有的大于零的全部加起来,小于零的只会越加越小,如果答案是奇数直接输出即可,如果是偶数,记录小于零的最大的奇数,和大于零的最小的奇数,因为偶数加减奇数都是奇数,两种去一种答案大的即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> minji1 = <span class="number">0x3f3f3f3f</span>, minji2 = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">sum += a[i];</span><br><span class="line"><span class="keyword">if</span> (a[i] &amp; <span class="number">1</span>) minji1 = <span class="built_in">min</span>(minji1, a[i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ((a[i] % <span class="number">2</span> + <span class="number">2</span>) % <span class="number">2</span> == <span class="number">1</span>) minji2 = <span class="built_in">max</span>(minji2, a[i]); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(sum - minji1, sum + minji2) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4415-点的赋值"><a href="#AcWing-4415-点的赋值" class="headerlink" title="AcWing 4415. 点的赋值"></a><a href="https://www.acwing.com/problem/content/4418/">AcWing 4415. 点的赋值</a></h2><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个 $n$个点 $m$ 条边的无向无权图。</p><p>点的编号为 $1∼n$。</p><p>图中不含重边和自环。</p><p>现在，请你给图中的每个点进行赋值，要求：</p><ol><li>每个点的权值只能是 $1$ 或 $2$ 或 $3$。</li><li>对于图中的每一条边，其两端点的权值之和都必须是奇数。</li></ol><p>请问，共有多少种不同的赋值方法。</p><p>由于结果可能很大，你只需要输出对 $998244353$ 取模后的结果。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 $T$，表示共有 $T$组测试数据。</p><p>每组数据第一行包含两个整数$n,m$。</p><p>接下来 $m$ 行，每行包含两个整数 $u,v$表示点 $u$ 和点 $v$ 之间存在一条边。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示不同赋值方法的数量对 $998244353$ 取模后的结果。</p><p>$1 \leq n \leq 3e5$</p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>要求边的两面是奇数,那么只有可能一奇一偶,这样就可以把一个图分成两边左半边右半边(奇数偶数或偶数奇数),一定是一个二分图(不包含奇数个环的图)才能是答案</p><p><img src="https://s2.loli.net/2022/05/02/1NbWUrQYDIOcAhS.png"></p><p>奇偶的位置可以互换,偶数只有一个选择,奇数有$1$和$3$两种选择就是$2 ^ {左}$ + $2 ^ {右}$ </p><p>如果不是二分图答案就是零, 如果有很多块图组成,乘数原理计算每块的和即可</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>, M = N * <span class="number">2</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> col[N], ans;</span><br><span class="line"><span class="type">int</span> n, m, cnt_0, cnt_1;</span><br><span class="line"><span class="type">int</span> h[N], e[M], ne[M], idx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">e[idx] = b, ne[idx] = h[a], h[a] = idx ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> c)</span> </span>&#123;</span><br><span class="line">col[u] = c;</span><br><span class="line">cnt_0 += c == <span class="number">1</span>;</span><br><span class="line">cnt_1 += c == <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i]) &#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span> (col[j] &amp;&amp; col[j] != <span class="number">3</span> - c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!col[j] &amp;&amp; !<span class="built_in">dfs</span>(j, <span class="number">3</span> - c)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(ll a, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">ll res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k) &#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">a = a * a % mod;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, (n + <span class="number">1</span>)  &lt;&lt; <span class="number">2</span>);</span><br><span class="line"><span class="built_in">memset</span>(col, <span class="number">0</span>, (n + <span class="number">1</span>) &lt;&lt; <span class="number">2</span>);</span><br><span class="line">idx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (m --) &#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="built_in">add</span>(x, y), <span class="built_in">add</span>(y, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!col[i]) &#123;</span><br><span class="line">cnt_0 = cnt_1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dfs</span>(i, <span class="number">1</span>)) ans = ans * (<span class="built_in">qmi</span>(<span class="number">2</span>, cnt_1) + <span class="built_in">qmi</span>(<span class="number">2</span>, cnt_0)) % mod;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; ___;</span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-4413-组队&quot;&gt;&lt;a href=&quot;#AcWing-4413-组队&quot; class=&quot;headerlink&quot; title=&quot;AcWing 4413. 组队&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;AcWing 4413. 组队&lt;/a&gt;&lt;/h2&gt;&lt;h4 id=&quot;</summary>
      
    
    
    
    <category term="AcWing周赛" scheme="https://chiullian.cn/categories/AcWing%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
    <category term="AcWing" scheme="https://chiullian.cn/tags/AcWing/"/>
    
  </entry>
  
  <entry>
    <title>Kuangbin题单并查集专题</title>
    <link href="https://chiullian.cn/2022/04/29/kuangbin%E9%A2%98%E5%8D%95%E5%B9%B6%E6%9F%A5%E9%9B%86%E4%B8%93%E9%A2%98/"/>
    <id>https://chiullian.cn/2022/04/29/kuangbin%E9%A2%98%E5%8D%95%E5%B9%B6%E6%9F%A5%E9%9B%86%E4%B8%93%E9%A2%98/</id>
    <published>2022-04-29T07:32:05.000Z</published>
    <updated>2022-05-11T04:32:16.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-4266-无线网络"><a href="#AcWing-4266-无线网络" class="headerlink" title="AcWing 4266. 无线网络"></a><a href="https://www.acwing.com/problem/content/4269/">AcWing 4266. 无线网络</a></h2><p>一个二维平面中放着 $n$ 台电脑。</p><p>电脑编号 $1∼n$。</p><p>每台电脑的具体位置已知。</p><p>初始时，所有电脑都是关机状态。</p><p>两台电脑可以直接通信当且仅当两台电脑都处于开机状态，并且两电脑之间距离不超过 $d$。</p><p>电脑之间还可以通过中介电脑实现间接通信。</p><p>例如，电脑 $A$ 既可以与电脑 $B$ 实现直接通信，也可以与电脑 $C$实现直接通信，那么电脑 $B$ 和电脑 $C $就可以借助电脑 $A$ 实现间接通信。</p><p>现在，要按顺序进行若干个操作，操作共分为两种：</p><ul><li><code>O p</code>，将电脑 $p$ 开机。</li><li><code>S p q</code>，询问电脑 $p$ 和电脑 $q$ 之间能否实现通信。</li></ul><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 $n,d$。</p><p>接下来 $n$ 行，每行包含两个整数 $xi,yi$，表示一台电脑的位置坐标。</p><p>接下来若干行，每行包含一个操作命令，格式入题面所述。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个询问指令，输出一行答案，如果可以实现通信，则输出 <code>SUCCESS</code>，否则输出 <code>FAIL</code>。</p><p>$1\leq n\leq 1001$,<br>$0\leq d \leq20000$,<br>$0\leq xi,yi \leq10000$,<br>$1\leq p,q\leq n,q\neq p$<br>最多包含 $3×10^5$ 个操作指令。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">4 1</span><br><span class="line">0 1</span><br><span class="line">0 2</span><br><span class="line">0 3</span><br><span class="line">0 4</span><br><span class="line">O 1</span><br><span class="line">O 2</span><br><span class="line">O 4</span><br><span class="line">S 1 4</span><br><span class="line">O 3</span><br><span class="line">S 1 4</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FAIL</span><br><span class="line">SUCCESS</span><br></pre></td></tr></table></figure><h4 id="个人思路"><a href="#个人思路" class="headerlink" title="个人思路"></a>个人思路</h4><p>因为只要两台之间不超过$d$时,两个之间就能通信,所以每当开机的时候把所有能通信的都并入一个集合即可.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line"><span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(PII x, PII y)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> sx = x.fi - y.fi;</span><br><span class="line"><span class="type">int</span> sy = x.se - y.se;</span><br><span class="line"><span class="keyword">return</span> sx * sx + sy * sy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, d;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; d;</span><br><span class="line"><span class="function">vector&lt;PII&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) p[i] = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">cin &gt;&gt; a[i].fi &gt;&gt; a[i].se;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; c) &#123;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">&#x27;O&#x27;</span>) &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; res.<span class="built_in">size</span>(); i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">cal</span>(a[res[i]], a[x]) &lt;= d * d) &#123;</span><br><span class="line">p[<span class="built_in">find</span>(res[i])] = x;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">res.<span class="built_in">emplace_back</span>(x);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> x, q;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; q;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(x) == <span class="built_in">find</span>(q)) cout &lt;&lt; <span class="string">&quot;SUCCESS&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;FAIL&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4267-可疑人员"><a href="#AcWing-4267-可疑人员" class="headerlink" title="AcWing 4267. 可疑人员"></a><a href="https://www.acwing.com/problem/content/4270/">AcWing 4267. 可疑人员</a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-4266-无线网络&quot;&gt;&lt;a href=&quot;#AcWing-4266-无线网络&quot; class=&quot;headerlink&quot; title=&quot;AcWing 4266. 无线网络&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.com/probl</summary>
      
    
    
    
    <category term="Kuangbin题单" scheme="https://chiullian.cn/categories/Kuangbin%E9%A2%98%E5%8D%95/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="https://chiullian.cn/tags/c/"/>
    
    <category term="Kuangbin题单" scheme="https://chiullian.cn/tags/Kuangbin%E9%A2%98%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>AcWing每日一题2022-4月25日~5月1日</title>
    <link href="https://chiullian.cn/2022/04/25/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022-4%E6%9C%8825%E6%97%A5-5%E6%9C%881%E6%97%A5/"/>
    <id>https://chiullian.cn/2022/04/25/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022-4%E6%9C%8825%E6%97%A5-5%E6%9C%881%E6%97%A5/</id>
    <published>2022-04-25T10:32:05.000Z</published>
    <updated>2022-05-05T11:15:55.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-2003-找到牛！"><a href="#AcWing-2003-找到牛！" class="headerlink" title="AcWing 2003. 找到牛！"></a><a href="https://www.acwing.com/problem/content/2005/">AcWing 2003. 找到牛！</a></h2><p>奶牛贝茜逃跑了，躲在了长满高草的山脊上。</p><p>农夫约翰为了抓回贝茜，决定在草地中匍匐前行，从而不被贝茜发现。</p><p>不幸的是，发现贝茜并没有那么容易。</p><p>约翰面前的草看起来像是一个长度为 NN 的括号字符串，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">)((()())())</span><br></pre></td></tr></table></figure><p>约翰清楚贝茜的后腿看上去就像一对相邻的左括号 <code>((</code>，她的前腿看上去就像一对相邻的右括号 <code>))</code>。</p><p>因此，贝茜的位置可以用一对索引 x&lt;y 来描述，使得 <code>((</code> 在位置 x 处被找到，<code>))</code> 在位置 yy 处被找到。</p><p>请计算贝茜可能站立的不同位置的数量。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>枚举))然后记录前面出现多少个((即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">sz</span>(s); i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span> &amp;&amp; s[i - <span class="number">1</span>] == <span class="string">&#x27;(&#x27;</span>) l ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span> &amp;&amp; s[i - <span class="number">1</span>] == <span class="string">&#x27;)&#x27;</span>) sum += l;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="AcWing-1995-见面与问候"><a href="#AcWing-1995-见面与问候" class="headerlink" title="AcWing 1995. 见面与问候"></a><a href="https://www.acwing.com/problem/content/1997/">AcWing 1995. 见面与问候</a></h2><p>众所周知，奶牛是非常有社交礼貌的动物：每当两头奶牛分开后相遇，它们都会用友好的“哞哞”声互相问候。</p><p>奶牛贝茜和她的朋友艾希正在农夫约翰的农场中的一条很长的道路上散步。</p><p>我们可以将此道路视为一个一维数轴。</p><p>贝茜和艾希都从原点出发，以相同的速度（$1 $单位距离&#x2F;单位时间）行走一段时间。</p><p>请根据每头奶牛的运动情况描述，确定它们相互打招呼的次数。</p><p>贝茜和艾希可以在不同的时间点停止移动，并且她们的移动时间都不会超过 $1000000$ 单位。</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>枚举每一秒时刻所走的方向往右走为1往左走为-1这样算的前缀和就是所走到的位置</p><p>然后枚举所有时刻然后判断位置是否相同即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> b, e;</span><br><span class="line">cin &gt;&gt; b &gt;&gt; e;</span><br><span class="line"><span class="type">int</span> p1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> mp1[N], mp2[N];</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">char</span>&gt;&gt; <span class="built_in">x</span>(b), <span class="built_in">y</span>(e);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[q, w] : x) &#123;</span><br><span class="line">cin &gt;&gt; q &gt;&gt; w;</span><br><span class="line"><span class="type">int</span> t = q;</span><br><span class="line"><span class="keyword">while</span>(t --) &#123;</span><br><span class="line"><span class="keyword">if</span> (w == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">mp1[p1 ++] = <span class="number">-1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mp1[p1 ++] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> p2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[q, w] : y) &#123;</span><br><span class="line">cin &gt;&gt; q &gt;&gt; w;</span><br><span class="line"><span class="type">int</span> t = q;</span><br><span class="line"><span class="keyword">while</span>(t --) &#123;</span><br><span class="line"><span class="keyword">if</span> (w == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">mp2[p2 ++] = <span class="number">-1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mp2[p2 ++] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> bei = <span class="number">0</span>, ai = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1e6</span> + <span class="number">10</span> &amp;&amp; i &lt; <span class="built_in">max</span>(p1, p2); i ++) &#123;</span><br><span class="line">bei += mp1[i];</span><br><span class="line">ai += mp2[i];</span><br><span class="line"><span class="keyword">if</span> (bei == ai &amp;&amp; (bei - mp1[i] != ai - mp2[i])) ans ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-1977-信息中继"><a href="#AcWing-1977-信息中继" class="headerlink" title="AcWing 1977. 信息中继"></a><a href="https://www.acwing.com/problem/content/1979/">AcWing 1977. 信息中继</a></h2><p>农夫约翰有 $N$ 头奶牛，编号 $1∼N$。</p><p>通过使用易拉罐和绳子构成的土制电话，它们会在约翰不注意的时候相互通信。</p><p>每头奶牛最多可以将消息转发给另一头奶牛：</p><p>对于奶牛 $i$，它会将自己收到的任何信息转发给奶牛 $Fi$（$Fi$ 与 $i$ 一定不同）。</p><p>如果 $Fi$ 为 $0$，则奶牛 $i$ 不转发消息。</p><p>不幸的是，奶牛们意识到来自某些奶牛的消息可能最终陷入循环之中，不断地被转发。</p><p>请确定所有奶牛中有多少只奶牛发出的消息不会永远陷入循环之中。</p><p>$1≤N≤1000$<br>$0\leq Fi \leq N$</p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>N的范围只有1000所以只需要枚举所有的点开始传信息是否能传到一个牛2次,如果能传到2次那么就一定是个环</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> st[N / <span class="number">1000</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line"><span class="type">int</span> t = i, f = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (t != <span class="number">0</span>) &#123;</span><br><span class="line">st[t] ++;</span><br><span class="line"><span class="keyword">if</span> (st[t] == <span class="number">2</span>) &#123;</span><br><span class="line">f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">t = a[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!f) ans ++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-2003-找到牛！&quot;&gt;&lt;a href=&quot;#AcWing-2003-找到牛！&quot; class=&quot;headerlink&quot; title=&quot;AcWing 2003. 找到牛！&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.com/probl</summary>
      
    
    
    
    <category term="AcWing每日一题" scheme="https://chiullian.cn/categories/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="https://chiullian.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>AcWing第48场周赛</title>
    <link href="https://chiullian.cn/2022/04/23/AcWing%E7%AC%AC48%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <id>https://chiullian.cn/2022/04/23/AcWing%E7%AC%AC48%E5%9C%BA%E5%91%A8%E8%B5%9B/</id>
    <published>2022-04-23T12:28:41.000Z</published>
    <updated>2022-05-04T13:35:43.944Z</updated>
    
    <content type="html"><![CDATA[<p>较为简单</p><h2 id="AcWing-4410-吃鸡蛋"><a href="#AcWing-4410-吃鸡蛋" class="headerlink" title="AcWing 4410. 吃鸡蛋"></a><a href="https://www.acwing.com/problem/content/4413/">AcWing 4410. 吃鸡蛋</a></h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>小明家里有 <strong>n</strong> 个鸡蛋。</p><p>每天早上，小明都要吃 <strong>1</strong> 个鸡蛋作为早餐。</p><p>小明家里还有一个母鸡。</p><p>母鸡会在第 $m$,$2m$,$3m$$…m,2m,3m…$ 天的<strong>晚上</strong>下蛋，每次只下 <strong>1</strong> 个蛋。</p><p>请问，连续多少天以后，小明就没有早餐鸡蛋吃了？</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行两个整数 <strong>n</strong>,<strong>m</strong>。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示答案。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>所有测试点满足 1$\leq$n$\leq$100，2$\leq$ m$\leq$100。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>$ 直接模拟即可$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> m, n, cnt = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (n) &#123;</span><br><span class="line">cnt ++;</span><br><span class="line">n -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt % m == <span class="number">0</span>) n ++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4411-三仙归洞"><a href="#AcWing-4411-三仙归洞" class="headerlink" title="AcWing 4411. 三仙归洞"></a><a href="https://www.acwing.com/problem/content/4414/">AcWing 4411. 三仙归洞</a></h2><p>三个倒扣着的不透明小碗排成一排。</p><p>随机挑选一个小碗，将一个小球置于碗中。</p><p>然后进行 n 次操作，编号 1∼n。</p><p>对于第 i 次操作：</p><ul><li>如果 $imod2 &#x3D; 1$，则操作内容为将位于中间的碗和位于左边的碗交换位置。</li><li>如果 $ imod2 &#x3D; 0 $ ，则操作内容为将位于中间的碗和位于右边的碗交换位置。</li></ul><p>我们不妨用 0,1,2 来表示左、中、右三个位置。</p><p>n 次操作全部完成以后，装有小球的碗位于位置 x。</p><p>请你计算，所有操作开始前，装有小球的碗所在的初始位置。</p><p>1$\leq$n$\leq$2×$10^9$</p><p>我们可以发现规律,答案为6的周期循环,取模计算即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">n --;</span><br><span class="line"><span class="type">int</span> r = <span class="number">0</span>, l = <span class="number">0</span>, mid = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) l = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">1</span>) mid = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r = <span class="number">1</span>;</span><br><span class="line">n %= <span class="number">6</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">0</span>; i --) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) <span class="built_in">swap</span>(mid, l);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">swap</span>(mid, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (l == <span class="number">1</span>) cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mid == <span class="number">1</span>) cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4412-构造数组"><a href="#AcWing-4412-构造数组" class="headerlink" title="AcWing 4412. 构造数组"></a><a href="https://www.acwing.com/problem/content/description/4415/">AcWing 4412. 构造数组</a></h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个长度为 n 的整数数组$a1,a2,…,an$。</p><p>请你构造长度为 n 的整数数组$b1,b2,…,bn$，要求数组 $b $满足：</p><ol><li>$b1&#x3D;0$。</li><li>对于任意一对索引 $i$ 和 $j$（1≤i,j≤n），如果 $ai&#x3D;aj$ 则$bi&#x3D;bj$ （注意，如果 $ai{\neq}aj$，则 $bi $和$ bj$ 相等与否随意）。</li><li>对于任意索引 $i$（$i∈[1,n−1]$），要么满足$bi&#x3D;bi+1$，要么满足$bi+1&#x3D;b_{i+1}$。</li></ol><p>请计算，一共可以构造出多少个不同的满足条件的数组 bb。</p><p>由于答案可能很大，你只需要输出对<strong>998244353</strong> 取模后的结果。</p><p>例如，如果**a&#x3D;[1,2,1,2,3]**，则一共有 2 个满足条件的数组 b，分别是$b&#x3D;[0,0,0,0,0]$ 和 $b&#x3D;[0,0,0,0,1]$。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>有题意相等的两个数之间任意所有的数都要相同才能满足</p><p>找当前数字最大能往后走多少, 看最后能贡献多少个区间,每个区间有两种选择往后数+1或不变</p><p>类似于区间合并,把相交的区间合并到一起,然后看</p><p>记录最早出现的下标和最晚出现的下标, 然后枚举两个之间是否有数最晚出现的下标在枚举当前最晚出现的后面,有的话就更新,直到枚举完所有不相邻的区间即可.</p><p>枚举完一个区间ans++, 最后$2^{ans - 1}$就是答案</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; last;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; a[i], last[a[i]] = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> maxr = last[a[i]];</span><br><span class="line"><span class="keyword">while</span> (i &lt;= maxr) maxr = <span class="built_in">max</span>(maxr, last[a[i ++]]);</span><br><span class="line">ans ++, i --;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> qmi = [&amp;](ll a, <span class="type">int</span> k, ll res = <span class="number">1</span>) -&gt; <span class="type">int</span>&#123;</span><br><span class="line"><span class="keyword">while</span> (k) &#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">a = a * a % mod;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line">cout &lt;&lt; <span class="built_in">qmi</span>(<span class="number">2</span>, ans - <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;较为简单&lt;/p&gt;
&lt;h2 id=&quot;AcWing-4410-吃鸡蛋&quot;&gt;&lt;a href=&quot;#AcWing-4410-吃鸡蛋&quot; class=&quot;headerlink&quot; title=&quot;AcWing 4410. 吃鸡蛋&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.</summary>
      
    
    
    
    <category term="AcWing周赛" scheme="https://chiullian.cn/categories/AcWing%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
    <category term="AcWing" scheme="https://chiullian.cn/tags/AcWing/"/>
    
  </entry>
  
  <entry>
    <title>Acwing每日一题2022(4月18日 ~ 4月24日)</title>
    <link href="https://chiullian.cn/2022/04/20/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022-4%E6%9C%8818%E6%97%A5-4%E6%9C%8824%E6%97%A5/"/>
    <id>https://chiullian.cn/2022/04/20/Acwing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%982022-4%E6%9C%8818%E6%97%A5-4%E6%9C%8824%E6%97%A5/</id>
    <published>2022-04-20T13:51:48.000Z</published>
    <updated>2022-05-05T11:15:51.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AcWing-1353-滑雪场设计"><a href="#AcWing-1353-滑雪场设计" class="headerlink" title="AcWing 1353. 滑雪场设计"></a><a href="https://www.acwing.com/problem/content/description/1355/">AcWing 1353. 滑雪场设计</a></h2><h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>农夫约翰的农场上有 N 个山峰，每座山的高度都是整数。</p><p>在冬天，约翰经常在这些山上举办滑雪训练营。</p><p>不幸的是，从明年开始，国家将实行一个关于滑雪场的新税法。</p><p>如果滑雪场的最高峰与最低峰的高度差大于17，国家就要收税。</p><p>为了避免纳税，约翰决定对这些山峰的高度进行修整。</p><p>已知，增加或减少一座山峰 x 单位的高度，需要花费 x2 的金钱。</p><p>约翰<strong>只愿意改变整数单位</strong>的高度，且每座山峰<strong>只能修改一次</strong>。</p><p>请问，约翰最少需要花费多少钱，才能够使得最高峰与最低峰的高度差不大于17。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 N。</p><p>接下来 N 行，每行包含一个整数，表示一座山的高度。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个整数，表示最少花费的金钱。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤1000,<br>数据保证，每座山的初始高度都在 0∼100 之间。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">20</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">24</span><br><span class="line">21</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure><h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>最佳方案为，将高度为 1 的山峰，增加 3 个单位高度，将高度为 24 的山峰，减少 3 个单位高度。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>一看数据范围,山的高度只有100, 所以我们枚举所有可行的区间即可0-17,1-18….</p><p>计算区间内所有的山的花费</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int ans = INF;</span></span></span><br><span class="line"><span class="string"><span class="meta">int n; cin &gt;&gt; n;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">vector&lt;int&gt; a(n);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int &amp;x : a) cin &gt;&gt; x;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i + 17 &lt;= 100; i ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">int j = i + 17, res = 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int k = 0; k &lt; n; k ++) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[k] &gt;= i &amp;&amp; a[k] &lt;= j) continue;</span></span></span><br><span class="line"><span class="string"><span class="meta">if (a[k] &lt; i) res += (i - a[k]) * (i - a[k]);</span></span></span><br><span class="line"><span class="string"><span class="meta">else if (a[k] &gt; j) res += (a[k] - j) * (a[k] - j);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = min(ans, res);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; ans &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">// cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="AcWing-1929-镜子田地"><a href="#AcWing-1929-镜子田地" class="headerlink" title="AcWing 1929. 镜子田地"></a><a href="https://www.acwing.com/problem/content/description/1931/">AcWing 1929. 镜子田地</a></h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>农夫约翰在屋子外面放了一些旧镜子，他的奶牛们像往常一样调皮地偷走了它们！</p><p>奶牛们将镜子放置在了一个矩形田地中，该田地可被划分为 N×M 个方格区域。</p><p>在每个方格区域中，奶牛在其某对对角之间放置一个双面镜，因此，共有两种放法，一种为 <code>/</code> 放置（镜子连接方格左下角和右上角），另一种为 <code>\</code> 放置（镜子连接方格左上角和右下角）。</p><p>一天晚上，奶牛贝茜将激光发射器带到了该田地中。</p><p>她站在田地外面，沿着田地的行或列水平或垂直照射光束，使光束反射一定数量的镜子。</p><p>由于镜子都是沿对角线摆放，因此经反射镜反射的水平光束最终将垂直传播，反之亦然。</p><p>贝茜想知道从田地之外射入的水平或垂直光束最多可以在田地中被反射多少次。</p><p>给定镜子田地的布局，请帮助贝茜计算这个数字。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含 N 和 M。</p><p>接下来 N 行，每行包含 M 个 <code>/</code> 或 <code>\</code> 字符，表示田地中镜子的具体摆放方式。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出田地之外的水平或垂直光束能够被反射的最大次数。</p><p>如果可以无限反射，则输出 −1−1。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N,M≤1000</p><h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">/\\</span><br><span class="line">\\\</span><br><span class="line">/\/</span><br></pre></td></tr></table></figure><h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>一共有4中进入农田的可能从上面, 下面, 左面,右面,</p><p>设置偏移方向$dx[4] &#x3D;$ {-1, 0, 1, 0}$, $$dy[4]$ &#x3D; {0, 1, 0, -1}</p><p>$0, 1, 2, 3$ 分别代表 上,右, 下, 左</p><p>一个光线照在<code>\</code> 上</p><ul><li>(从上方射入<strong>0</strong>),从右方射出<strong>1</strong></li><li>(从下方射入<strong>2</strong>),从左方射出<strong>3</strong></li><li>(从左方射入<strong>3</strong>),从右方射出<strong>2</strong></li><li>(从右方射入<strong>1</strong>),从上方射出<strong>0</strong></li></ul><p>可以看出原来的方向,转变后为 ^1 的值</p><p>光线照在<code>/</code>上</p><ul><li>(从上方射入<strong>0</strong>),从左方射出<strong>3</strong></li><li>(从下方射入<strong>2</strong>),从右方射出<strong>1</strong></li><li>(从左方射入<strong>3</strong>),从上方射出<strong>0</strong></li><li>(从右方射入<strong>1</strong>),从上方射出<strong>2</strong></li></ul><p>可以看出原来的方向,转变后为 ^3 的值</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 1e3 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">int n, m;</span></span></span><br><span class="line"><span class="string"><span class="meta">vector&lt;string&gt; g;</span></span></span><br><span class="line"><span class="string"><span class="meta">int ans = 0, dx[] = &#123;-1, 0, 1, 0&#125;, dy[] = &#123;0, 1, 0, -1&#125;;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void dfs(int x, int y, int d, int cnt) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ans = max(cnt, ans);</span></span></span><br><span class="line"><span class="string"><span class="meta">if (g[x][y] == &#x27;/&#x27;) d ^= 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">else d ^= 3;</span></span></span><br><span class="line"><span class="string"><span class="meta">int nx = x + dx[d], ny = y + dy[d];</span></span></span><br><span class="line"><span class="string"><span class="meta">if (nx &lt; n and ny &lt; m and (ny &gt;= 0) and nx &gt;= 0) dfs(nx, ny, d, cnt + 1);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cin &gt;&gt; n &gt;&gt; m;</span></span></span><br><span class="line"><span class="string"><span class="meta">g.resize(n);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (string &amp;x : g) cin &gt;&gt; x;</span></span></span><br><span class="line"><span class="string"><span class="meta">// 上, 右, 下, 左</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt; m; i ++) dfs(0, i, 2, 1), dfs(n - 1, i, 0, 1);</span></span></span><br><span class="line"><span class="string"><span class="meta">for (int i = 0; i &lt; n; i ++) dfs(i, m - 1, 3, 1), dfs(i, 0, 1, 1);</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">cout &lt;&lt; ans &lt;&lt; endl;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">// cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="AcWing-1912-里程表"><a href="#AcWing-1912-里程表" class="headerlink" title="AcWing 1912. 里程表"></a><a href="https://www.acwing.com/activity/content/code/content/3308420/">AcWing 1912. 里程表</a></h2><p>约翰的奶牛正在公路上旅行。</p><p>他们汽车上的里程表显示的是整数里程值。</p><p>旅途开始时里程表显示的里程值为 X，旅途结束时里程表显示的里程值为 Y。</p><p>每当里程表显示“有趣的”数字（包括开始和结束时显示的数字）时，奶牛们就会发出愉快的叫声。</p><p>如果一个数除去前导零以外的所有数字中，除了一个数字不同以外，其他所有数字都是相同的，那么这个数就是“有趣的”。</p><p>例如，3332333323 和 110110 是有趣的，而 97799779 和 5555555555 不是有趣的。</p><p>请帮助约翰计算奶牛们在旅途中发出叫声的次数。</p><p>100$\leq$ X$\leq$ Y $\leq$ $10^{16}$</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>一看数据范围暴力枚举是显然不行的, 只需要枚举所有的答案即可,范围大,但是答案少,枚举答案判断答案是否合法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> l, r, ans = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">17</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j ++) &#123;</span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(i, <span class="string">&#x27;0&#x27;</span> + j)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (k == j) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> z = <span class="number">0</span>; z &lt; i; z ++) &#123;</span><br><span class="line">string t = s;</span><br><span class="line">t[z] = <span class="string">&#x27;0&#x27;</span> + k;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> w = <span class="number">0</span>; w &lt; i; w ++) p = p * <span class="number">10</span> + t[w] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (t[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= p &amp;&amp; r &gt;= p) ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AcWing-1353-滑雪场设计&quot;&gt;&lt;a href=&quot;#AcWing-1353-滑雪场设计&quot; class=&quot;headerlink&quot; title=&quot;AcWing 1353. 滑雪场设计&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwing.com/pr</summary>
      
    
    
    
    <category term="AcWing每日一题" scheme="https://chiullian.cn/categories/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="c++" scheme="https://chiullian.cn/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>AcWing第47场周赛</title>
    <link href="https://chiullian.cn/2022/04/20/Acwing%E7%AC%AC47%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <id>https://chiullian.cn/2022/04/20/Acwing%E7%AC%AC47%E5%9C%BA%E5%91%A8%E8%B5%9B/</id>
    <published>2022-04-20T08:40:43.000Z</published>
    <updated>2022-04-23T12:29:27.746Z</updated>
    
    <content type="html"><![CDATA[<p>总体较为简单</p><h2 id="AcWing-4399-数字母"><a href="#AcWing-4399-数字母" class="headerlink" title="AcWing 4399. 数字母"></a><a href="https://www.acwing.com/activity/content/problem/content/6841/">AcWing 4399. 数字母</a></h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个仅包含小写字母的集合。</p><p>请你判断，集合中不同字母的数量。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入一行字符串，用以描述这个小写字母集合。</p><p>字符串以 <code>&#123;</code> 开始，以 <code>&#125;</code> 结束，中间列出所有集合中包含的小写字母，小写字母两两之间用逗号（<code>,</code>）加空格（<code> </code>）隔开。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示集合中不同字母的数量。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前 55 个测试点满足，集合中包含的字母数量在$ [0,10] $范围内。 所有测试点满足，集合中包含的字母数量在$ [0,333] $范围内。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;a, b, c&#125;</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;b, a, b, a&#125;</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin, s);</span><br><span class="line">set&lt;<span class="type">char</span>&gt; S;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">sz</span>(s) - <span class="number">1</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27; &#x27;</span> || s[i] == <span class="string">&#x27;,&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">S.<span class="built_in">insert</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; S.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4400-玩游戏"><a href="#AcWing-4400-玩游戏" class="headerlink" title="AcWing 4400. 玩游戏"></a><a href="https://www.acwing.com/problem/content/4403/">AcWing 4400. 玩游戏</a></h2><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p><strong>n</strong> 个小朋友围成一圈，玩数数游戏。</p><p>小朋友们按顺时针顺序，依次编号为 <strong>1∼n</strong>。</p><p>初始时，<strong>1</strong> 号小朋友被指定为领头人。</p><p>游戏一共会行进 <strong>k</strong> 轮。</p><p>在第 <strong>i</strong> 轮中，领头人会从他的顺时针方向的下一个人开始，按顺时针顺序数 <strong>ai</strong> 个人。</p><p>其中，最后一个被领头人数到的人被淘汰出局，这也意味着该轮游戏结束。</p><p>出局者的顺时针方向的下一个人被指定为新领头人，引领新一轮游戏。</p><p>例如，假设当游戏即将开始第 i 轮时，还剩下 <strong>5</strong> 个小朋友，编号按顺时针顺序依次为 <strong>8,10,13,14,16</strong>，并且当前领头人为 <strong>13</strong> 号小朋友，<strong>ai&#x3D;12</strong>，则第 i 轮游戏结束后，最后一个被数到的小朋友为 <strong>16</strong> 号小朋友，他将被淘汰出局，并且处于其下一位的第 8 号小朋友将被指定为新领头人。</p><p>现在，请你求出每一轮次被淘汰的小朋友的编号。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 <strong>n</strong>,<strong>k</strong>。</p><p>第二行包含 <strong>k</strong> 个整数 <strong>a1,a2,…,ak</strong>。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>一行，<strong>k</strong> 个整数，其中第 <strong>i</strong> 个整数表示在第 <strong>i</strong>轮中被淘汰的小朋友的编号。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>前三个测试点满足 2≤n≤10。<br>所有测试点满足 2≤n≤100，1≤k≤n−1，1≤ai≤109。</p><h4 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 5</span><br><span class="line">10 4 11 4 1</span><br></pre></td></tr></table></figure><h4 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 2 5 6 1</span><br></pre></td></tr></table></figure><h4 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">2 5</span><br></pre></td></tr></table></figure><h4 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure><hr><p><a href="https://baike.baidu.com/item/%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98/3857719?fromtitle=%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF&fromid=348830&fr=aladdin">约瑟夫环</a>系列问题, vector模拟删除就行了,每次加偏移量然后取模长度即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(k)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) b.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> &amp;x : a) cin &gt;&gt; x;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i ++) &#123;</span><br><span class="line"><span class="type">int</span> j = (s + a[i]) % (<span class="built_in">sz</span>(b));</span><br><span class="line">cout &lt;&lt; (*(b.<span class="built_in">begin</span>() + j)) &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">b.<span class="built_in">erase</span>(b.<span class="built_in">begin</span>() + j);</span><br><span class="line">s = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AcWing-4401-找回数组"><a href="#AcWing-4401-找回数组" class="headerlink" title="AcWing 4401. 找回数组"></a><a href="https://www.acwing.com/problem/content/4404/">AcWing 4401. 找回数组</a></h2><h4 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h4><p>有一个长度为 k 的整数数组 x0,x1,…,xk−1。</p><p>不幸的是，这个数组已经丢失了，我们甚至不知道 k 的具体值。</p><p>幸运的是，我们找到了另一个利用数组 x 生成的长度为 n+1 的数组 a0,a1,…,an。</p><p>数组 a 的正式描述如下：</p><ul><li>a0&#x3D;0。</li><li>对于 1≤i≤n，ai&#x3D;x(i−1)modk+ai−1ai&#x3D;x(i−1)modk+ai−1。</li></ul><p>例如，当 x&#x3D;[1,2,3]x&#x3D;[1,2,3] 并且 n&#x3D;5n&#x3D;5 时，生成数组 aa 的过程如下：</p><ul><li>a0&#x3D;0a0&#x3D;0</li><li>a1&#x3D;x0mod3+a0&#x3D;x0+0&#x3D;1</li><li>a2&#x3D;x1mod3+a1&#x3D;x1+1&#x3D;3</li><li>a3&#x3D;x2mod3+a2&#x3D;x2+3&#x3D;6</li><li>a4&#x3D;x3mod3+a3&#x3D;x0+6&#x3D;7</li><li>a5&#x3D;x4mod3+a4&#x3D;x1+7&#x3D;9</li></ul><p>所以，当 x&#x3D;[1,2,3]并且 n&#x3D;5 时，可以生成数组a&#x3D;[0,1,3,6,7,9]。</p><p>现在，我们希望你通过数组 a 找回数组 x。</p><p>更具体地说，已知 1≤k≤n，请你找到所有可能的 k 值，即数组 x 的所有可能长度。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 n。</p><p>第二行包含 n 个整数 a1,a2,…,an。</p><p>注意，由于 a0 一定等于 0，所以在输入中并未给出。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>第一行输出一个整数 l，表示数组 x 的所有可能长度的数量。</p><p>第二行按升序输出 l 个整数，表示数组 x 的所有可能长度。</p><h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>前四个测试点满足 1≤n≤5，<br>所以测试点满足 1≤n≤1000，1≤ai≤106。</p><h4 id="输入样例1：-2"><a href="#输入样例1：-2" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><h4 id="输出样例1：-2"><a href="#输出样例1：-2" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><h4 id="输入样例2：-2"><a href="#输入样例2：-2" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 5 6 8</span><br></pre></td></tr></table></figure><h4 id="输出样例2：-2"><a href="#输出样例2：-2" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><h4 id="输入样例3：-1"><a href="#输入样例3：-1" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 5 3</span><br></pre></td></tr></table></figure><h4 id="输出样例3：-1"><a href="#输出样例3：-1" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>数据范围&lt; 1000 所以暴力枚举所有的长度即可,然后判断该长度是否合法<br>$a[i] - a[i - 1] $&#x3D; $x_{imod k}$<br>$a[i + 1] - a[i] $&#x3D;$x_{i + 1mod k}$</p><p>…</p><p>如果x[i + k] 不等于x[i]就是不合法的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, ans</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k ++) &#123;</span><br><span class="line"><span class="type">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = k + <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] != a[i - k] - a[i - k - <span class="number">1</span>]) &#123;</span><br><span class="line">ok = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ok) ans.<span class="built_in">emplace_back</span>(k);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sz</span>(ans) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : ans) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;总体较为简单&lt;/p&gt;
&lt;h2 id=&quot;AcWing-4399-数字母&quot;&gt;&lt;a href=&quot;#AcWing-4399-数字母&quot; class=&quot;headerlink&quot; title=&quot;AcWing 4399. 数字母&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acwin</summary>
      
    
    
    
    <category term="AcWing周赛" scheme="https://chiullian.cn/categories/AcWing%E5%91%A8%E8%B5%9B/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
    <category term="AcWing" scheme="https://chiullian.cn/tags/AcWing/"/>
    
  </entry>
  
  <entry>
    <title>代码源每日一题</title>
    <link href="https://chiullian.cn/2022/04/12/%E4%BB%A3%E7%A0%81%E6%BA%90%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <id>https://chiullian.cn/2022/04/12/%E4%BB%A3%E7%A0%81%E6%BA%90%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</id>
    <published>2022-04-12T06:59:31.000Z</published>
    <updated>2022-05-04T13:35:30.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特殊正方形"><a href="#特殊正方形" class="headerlink" title="特殊正方形"></a><a href="http://oj.daimayuan.top/course/11/problem/386">特殊正方形</a></h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入$n$，输出$n$行$n$列的由<code>+</code>和<code>.</code>组成的正方形，其中最外面一圈全是<code>+</code>，第二圈全是<code>.</code>，…，对于第$i$圈，如果$i$是奇数，那么全是<code>+</code>，否则全是<code>.</code>。</p><p><strong>输入样例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">++++++++++</span><br><span class="line">+........+</span><br><span class="line">+.++++++.+</span><br><span class="line">+.+....+.+</span><br><span class="line">+.+.++.+.+</span><br><span class="line">+.+.++.+.+</span><br><span class="line">+.+....+.+</span><br><span class="line">+.++++++.+</span><br><span class="line">+........+</span><br><span class="line">++++++++++</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这里我们只需要一圈一圈的枚举即可,三维循环,第一维枚举层数,这里层数偶数直接$n&#x2F;2$ 奇数要$+1$, 二三维枚举环形.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> t = n / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (n &amp; <span class="number">1</span>) t ++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> x = i; x &lt;= n - i + <span class="number">1</span>; x ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> y = i; y &lt;= n - i + <span class="number">1</span>; y ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span>) s[x][y] = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> s[x][y] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;</span><br><span class="line">cout &lt;&lt; s[i][j];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2022-x2F-4-x2F-14，走楼梯进阶版"><a href="#2022-x2F-4-x2F-14，走楼梯进阶版" class="headerlink" title="2022&#x2F;4&#x2F;14，走楼梯进阶版"></a>2022&#x2F;4&#x2F;14，<a href="http://oj.daimayuan.top/problem/129">走楼梯进阶版</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>楼梯有 <strong>n</strong> 阶，上楼可以一步上一阶，也可以一步上二阶。</p><p>但你不能连续三步都走两阶，计算走到第<strong>n</strong>阶共有多少种不同的走法。</p><p><strong>输入样例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>(n &lt; 50)</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>考虑动态规划,先凭题意跟感觉,写出我们的状态表达方式,选择恰当的表示方式,这里我想的是</p><blockquote><p>走了i步, 到这一步走,前面的连续的2步的次数</p><p>当前这一步选择走一步 f[i + 1] [0] +&#x3D; f[i] [j]</p><p> 当前这一步走两步 f[i + 2] [j + 1] +&#x3D; f[i] [j], (j &lt; 3), 因为不能超过3步</p><p>初始化, f[0] [0] &#x3D; 1</p><p>答案就是f[n] [0] + f[n] [1] + f[n] [2]</p></blockquote><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e2</span> + <span class="number">10</span>;</span><br><span class="line">ll f[N][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j ++) &#123;</span><br><span class="line">f[i + <span class="number">1</span>][<span class="number">0</span>] += f[i][j];</span><br><span class="line"><span class="keyword">if</span> (j &lt;= <span class="number">2</span>) f[i + <span class="number">2</span>][j + <span class="number">1</span>] += f[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[n][<span class="number">0</span>] + f[n][<span class="number">1</span>] + f[n][<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="走路"><a href="#走路" class="headerlink" title="走路"></a><a href="http://oj.daimayuan.top/problem/460">走路</a></h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一条很长的数轴，一开始你在$0$的位置。接下来你要走$n$步，第$i$步你可以往右走$a_i$或者$b_i$。</p><p>问$n$步之后，$0$到$m$的每个位置，能不能走到？</p><p><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 10</span><br><span class="line">1 2</span><br><span class="line">2 6</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure><p>输出样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000011001</span><br></pre></td></tr></table></figure><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>正常思维:</p><blockquote><p>考虑动态规划, 状态方程的含义:考虑前$i$ 次, 能走到第$j$个地方</p><p>假如当前选择走a步, f[i] [j] -&gt; f[i + 1] [j + a], f[i] [j]能走到的地方f[i + 1] [j] 都能走到.      (j + a $\leqslant$ m)</p><p>走$b$步同理.</p></blockquote><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">bool</span> f[<span class="number">105</span>][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= m; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a + j &lt;= m) f[i + <span class="number">1</span>][j + a] |= f[i][j];</span><br><span class="line"><span class="keyword">if</span> (b + j &lt;= m) f[i + <span class="number">1</span>][j + b] |= f[i][j]; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) cout &lt;&lt; f[n][i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="下面将非正常实现"><a href="#下面将非正常实现" class="headerlink" title="下面将非正常实现"></a>下面将非正常实现</h3><p>这里我们利用bitset来实现状态转移, 看下面<del>骚操作</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bitset&lt;N&gt; f;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">// 刚开始0能到0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, a, b; i &lt;= n; i ++) &#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">f = (f &lt;&lt; a) | (f &lt;&lt; b); <span class="comment">//上一步能到所有点的基础上走a步和走b步</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) cout &lt;&lt; f[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大和上升子序列"><a href="#最大和上升子序列" class="headerlink" title="最大和上升子序列"></a><a href="http://oj.daimayuan.top/problem/289">最大和上升子序列</a></h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为 nn 的数组 a1,a2,…,ana1,a2,…,an，问其中的和最大的上升子序列。也就是说，我们要找到数组 $p_1$,$p_2$,…,$p_m$，满足 $1$≤$p_1$&lt;$p_2$&lt;⋯&lt;$p_m$≤ $n$并且 $a_{p_1}$&lt;$a_{p_2}$&lt;⋯&lt;$a_{p_m}$，使得$a_{p_1}$+$a_{p_2}$+⋯+$a_{p_m}$最大。</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 7 4 2 6 8</span><br></pre></td></tr></table></figure><p>样例输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21</span><br></pre></td></tr></table></figure><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>就是最长上升子序列的模型, 这里维护的不是长度了而是, 维护的以当前结尾的和最大的最长上升子序列.</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line">f[i] = a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[j]) f[i] = <span class="built_in">max</span>(f[i], f[j] + a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; *<span class="built_in">max_element</span>(f.<span class="built_in">begin</span>(), f.<span class="built_in">end</span>()) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="路径计数"><a href="#路径计数" class="headerlink" title="路径计数"></a><a href="http://oj.daimayuan.top/problem/126">路径计数</a></h3><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一个n×n的网格，有些格子是可以通行的，有些格子是障碍。</p><p>一开始你在左上角的位置，你可以每一步往下或者往右走，问有多少种走到右下角的方案。</p><p>由于答案很大，输出对109+7取模的结果。</p><p>转移太简单了了直接放代码了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">f</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) </span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i + <span class="number">1</span> &lt;= n &amp;&amp; a[i + <span class="number">1</span>][j] == <span class="number">1</span>) </span><br><span class="line">f[i + <span class="number">1</span>][j] += f[i][j], f[i + <span class="number">1</span>][j] %= mod;</span><br><span class="line"><span class="keyword">if</span> (j + <span class="number">1</span> &lt;= n &amp;&amp; a[i][j + <span class="number">1</span>] == <span class="number">1</span>) </span><br><span class="line">f[i][j + <span class="number">1</span>] += f[i][j], f[i][j + <span class="number">1</span>] %= mod;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[n][n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ___ = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// cin &gt;&gt; ___;</span></span><br><span class="line"><span class="keyword">for</span> (; ___ -- ;) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;特殊正方形&quot;&gt;&lt;a href=&quot;#特殊正方形&quot; class=&quot;headerlink&quot; title=&quot;特殊正方形&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://oj.daimayuan.top/course/11/problem/386&quot;&gt;特殊正方形&lt;/a&gt;&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="代码源每日一题" scheme="https://chiullian.cn/categories/%E4%BB%A3%E7%A0%81%E6%BA%90%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>AcWing春季每日一题4月11-4月17</title>
    <link href="https://chiullian.cn/2022/04/12/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <id>https://chiullian.cn/2022/04/12/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</id>
    <published>2022-04-12T03:19:48.000Z</published>
    <updated>2022-05-05T11:16:11.237Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022年4月12日"><a href="#2022年4月12日" class="headerlink" title="2022年4月12日"></a>2022年4月12日</h1><h2 id="AcWing-1824-钻石收藏家"><a href="#AcWing-1824-钻石收藏家" class="headerlink" title="AcWing 1824. 钻石收藏家"></a>AcWing 1824. 钻石收藏家</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>奶牛贝茜非常喜欢闪闪发光的东西，她会在业余时间开采钻石。</p><p>她收藏了 $N$ 颗大小不等的钻石，她想将其中的一些摆放在牛棚的展示柜当中。</p><p>为了使展示柜中的钻石尺寸大小相似，她不会将两颗尺寸大小相差超过 $K$ 的钻石同时放在柜子中（刚好相差 $K$，则没有问题）。</p><p>给定 $K$，请帮助贝茜计算在展示柜中最多可以摆放多少颗钻石。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 $N$,$K$。($1$$\leqslant$N$\leqslant$ 1000，$1$$\leqslant$K$\leqslant$ 10000 )</p><p>接下来 $N$ 行，每行包含一个整数，表示一颗钻石的尺寸。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出贝茜可以在展示柜中展示的钻石最大数量。</p><p>输入样例 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1</span><br><span class="line">6</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>输出样例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>这个题我的第一反映是先进行排序（得想让他连续），然后枚举所有起点， 然后往后放最大放到第几个，这里j不需要回溯，只要遍历一遍即可。进行双指针操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> &amp;x : a) cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line"><span class="keyword">while</span> (a[j] - a[i] &lt;= k &amp;&amp; j &lt; n) j ++;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, j - i);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删减"><a href="#删减" class="headerlink" title="删减"></a><a href="https://www.acwing.com/problem/content/description/1885/">删减</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>农夫约翰把杂志上所有的文章摘抄了下来并把它变成了一个长度不超过 $10^6$ 的字符串 S。</p><p>他希望从 S 中删除子串 T。</p><p>农夫约翰在 S 中从头开始寻找子串 T，一旦找到，就将它从 S 中删除，然后再次从头开始寻找（而不是接着往下找）。</p><p>他重复这个操作直到 S 中没有子串 T 为止。</p><p>注意，删除一个子串 T 可能会导致一个新的子串 T 的出现。</p><p>请帮助约翰完成这些操作并输出最后的 S。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含字符串 S。</p><p>第二行包含字符串 T。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出操作完成后的 S。</p><p>保证最终字符串 S 不为空。</p><p>样例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whatthemomooofun</span><br><span class="line">moo</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatthefun</span><br></pre></td></tr></table></figure><p>解题思路</p><p>如果直接暴力string的话肯定会tle, 然后我们想着优化一下,设置一个答案string,一个一个的插入原来的s的字符, 如果出现了在删,这样大量的省去了string删除O(n * m) 的复杂度.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">string s, t, ans;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; t;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i ++) &#123;</span><br><span class="line">ans += s[i];</span><br><span class="line"><span class="keyword">if</span> (ans.<span class="built_in">size</span>() &gt;= t.<span class="built_in">size</span>() &amp;&amp; ans.<span class="built_in">substr</span>(ans.<span class="built_in">size</span>() - t.<span class="built_in">size</span>(), t.<span class="built_in">size</span>()) == t) &#123;</span><br><span class="line">ans.<span class="built_in">erase</span>(ans.<span class="built_in">begin</span>() + ans.<span class="built_in">size</span>() - t.<span class="built_in">size</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2022年4月12日&quot;&gt;&lt;a href=&quot;#2022年4月12日&quot; class=&quot;headerlink&quot; title=&quot;2022年4月12日&quot;&gt;&lt;/a&gt;2022年4月12日&lt;/h1&gt;&lt;h2 id=&quot;AcWing-1824-钻石收藏家&quot;&gt;&lt;a href=&quot;#AcWi</summary>
      
    
    
    
    <category term="AcWing每日一题" scheme="https://chiullian.cn/categories/AcWing%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces#779(Div2)</title>
    <link href="https://chiullian.cn/2022/04/11/Codeforces-Codeforces-Round-779-Div-2/"/>
    <id>https://chiullian.cn/2022/04/11/Codeforces-Codeforces-Round-779-Div-2/</id>
    <published>2022-04-10T16:26:21.000Z</published>
    <updated>2022-05-11T04:30:59.043Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1658">比赛链接</a></p><p>A-B就略了 </p><p>思路+补题</p><h2 id="C-Shinju-and-the-Lost-Permutation"><a href="#C-Shinju-and-the-Lost-Permutation" class="headerlink" title="C Shinju and the Lost Permutation"></a>C <a href="https://codeforces.com/contest/1658/problem/C">Shinju and the Lost Permutation</a></h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>Shinju loves permutations very much! Today, she has borrowed a permutation $p$ from Juju to play with.The $i$-th cyclic shift of a permutation $p$ is a transformation on the permutation such that  $p&#x3D;[p_1, p_2, \ldots, p_n]$ will now become $p&#x3D;[p_{n-i+1}, \ldots, p_n, p_1,p_2, \ldots, p_{n-i}]$.Let’s define the power of permutation $p$ as the number of distinct elements in the prefix maximums array $b$ of the permutation. The prefix maximums array $b$ is the array of length $n$ such that $b_i &#x3D; \max(p_1, p_2, \ldots, p_i)$. For example, the power of $[1, 2, 5, 4, 6, 3]$ is $4$ since $b&#x3D;[1,2,5,5,6,6]$ and there are $4$ distinct elements in $b$.Unfortunately, Shinju has lost the permutation $p$! The only information she remembers is an array $c$, where $c_i$ is the power of the $(i-1)$-th cyclic shift of the permutation $p$. She’s also not confident that she remembers it correctly, so she wants to know if her memory is good enough.Given the array $c$, determine if there exists a permutation $p$ that is consistent with $c$. You do not have to construct the permutation $p$.A permutation is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation ($2$ appears twice in the array) and $[1,3, 4]$ is also not a permutation ($n&#x3D;3$ but there is $4$ in the array).</p><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>是原来有一个序列,每次能把最后一个放到第一个的位置,即数列右移得到的max前缀的数量max前缀就是2, 3, 1, 5 ,4得到的就是2, 3, 3, 5, 5, 其中有三个max数量[2, 3, 5], 题目给出的是是数量数组</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我们可以看出, 从最后一个放到第一个其中max的最大的增量是一个, 而下降可能很多也肯很少, 所以突破口在这里就是,后一个减去前一个的增量大于1个的时候,一定是不成立的,其中1只能出现一次,就是最大的放在第一个的时候</p><p>###z 代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + n)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">a[i + n] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n * <span class="number">2</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &amp;&amp; a[i] - a[i - <span class="number">1</span>] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cnt += a[i] == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt;  (cnt == <span class="number">2</span> ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> tt;</span><br><span class="line">cin &gt;&gt; tt;</span><br><span class="line"><span class="keyword">while</span> (tt -- ) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="388535-Easy-Version"><a href="#388535-Easy-Version" class="headerlink" title="388535 (Easy Version)"></a><a href="https://codeforces.com/contest/1658/problem/D1">388535 (Easy Version)</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>This is the easy version of the problem. The difference in the constraints between both versions is colored below in red. You can make hacks only if all versions of the problem are solved.Marin and Gojou are playing hide-and-seek with an array.Gojou initially performs the following steps:  </p><ul><li>First, Gojou chooses $2$ integers $l$ and $r$ such that $l \leq r$.  </li><li>Then, Gojou makes an array $a$ of length $r-l+1$ which is a permutation of the array $[l,l+1,\ldots,r]$. </li><li>Finally, Gojou chooses a secret integer $x$ and sets $a_i$ to $a_i \oplus x$ for all $i$ (where $\oplus$ denotes the bitwise XOR operation).</li></ul><p>Marin is then given the values of $l,r$ and the final array $a$. She needs to find the secret integer $x$ to win. Can you help her?Note that there may be multiple possible $x$ that Gojou could have chosen. Marin can find any possible $x$ that could have resulted in the final value of $a$.</p><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>给你一个区间 $l$ - $r$ , 然后让你输入$r$ - $l$ + $1$ 个数, 让你求一个x能异或这些数,然后所有数都在 $l$ - $r$ 的范围内. (easy版本l固定是0)</p><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>给出前几个数前缀</p><p> 0 0 0</p><p>0 0 1</p><p>0 1 0</p><p>0 1 1</p><p>1 0 0</p><p>1 0 1</p><p>1 1 0</p><p>1 1 1</p><p><del>可以</del>看出规律观察每一列, 前这些数中每一列0的数量都是大于等与1的数量,因为他是保证有解的, 这样才能保证数更小, 如果这一列的1的数量大于0的数量异或一下1即可.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x) cerr &lt;&lt; #x &lt;&lt; <span class="string">&#x27;=&#x27;</span> &lt;&lt; x &lt;&lt; endl</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> col_0[<span class="number">64</span>], col_1[<span class="number">64</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="built_in">memset</span>(col_0, <span class="number">0</span>, <span class="keyword">sizeof</span> col_0);</span><br><span class="line"><span class="built_in">memset</span>(col_1, <span class="number">0</span>, <span class="keyword">sizeof</span> col_1);</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line"><span class="type">int</span> n = r - l + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">18</span>; j ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (x &gt;&gt; j &amp; <span class="number">1</span>) col_1[j] ++;</span><br><span class="line"><span class="keyword">else</span> col_0[j] ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">18</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">if</span> (col_1[i] &gt; col_0[i]) ans += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tt;</span><br><span class="line">cin &gt;&gt; tt;</span><br><span class="line"><span class="keyword">while</span> (tt -- ) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="388535-Hard-Version"><a href="#388535-Hard-Version" class="headerlink" title="388535 (Hard Version)"></a><a href="https://codeforces.com/contest/1658/problem/D2">388535 (Hard Version)</a></h2><p>此题为上一题的加强版本其中$l$ 的范围随机,不一定是0</p><p>这里提供一种解题思路, 跑01字典树模板<a href="https://www.acwing.com/problem/content/145/">ACWing最大异或对</a>. $a[i]$ $\bigoplus$ $x$  一个数, 假设我们把所有的a[i]拆成二进制放到一棵字典树上, 如果x与异或树上异或的最大值是r且x与异或树上异或的最小值是l, 那么其他数异或x的一定都在是在这样一个区间内,又因为a[i] $\neq$ a[j] (i $\neq$ j), 两个不相等的数异或之后还是不相同的。</p><p>所以只要枚举所有的x即可， 然而0.0枚举所有的x会TLE的，还得想着优化一下， 因为答案一定有解，所以a[i] $\bigoplus$x 肯定有一个是$r$或者$l$的， 所以只要枚举a[i]  $\bigoplus$ l或者 a[i] $\bigoplus$ r即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = L; i &lt;= R; i++) &#123;</span><br><span class="line">    <span class="type">int</span> x = a[i] ^ R; <span class="comment">// a[i] ^ L 都行</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">ask_mx</span>(x) == R &amp;&amp; <span class="built_in">ask_mi</span>(x) == L) &#123;</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这一题memset也会tle因为范围很大，memset也挺耗时，还是会TLE</p><p>下面附一张，一边插入一边初始化（忘了看哪个博客还是啥的时候看大佬这样写的）太秀了<del>之后就是我的了</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> tr[N * <span class="number">30</span>][<span class="number">2</span>], idx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tr[<span class="number">0</span>][<span class="number">0</span>] = tr[<span class="number">0</span>][<span class="number">1</span>] = idx = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">20</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="type">int</span> j = (n &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tr[p][j]) &#123;</span><br><span class="line">            tr[idx + <span class="number">1</span>][<span class="number">0</span>] = tr[idx + <span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            tr[p][j] = ++ idx;</span><br><span class="line">        &#125;</span><br><span class="line">        p = tr[p][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> PII = pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> tr[N * <span class="number">30</span>][<span class="number">2</span>], idx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tr[<span class="number">0</span>][<span class="number">0</span>] = tr[<span class="number">0</span>][<span class="number">1</span>] = idx = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">20</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        <span class="type">int</span> j = (n &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (!tr[p][j]) &#123;</span><br><span class="line">            tr[idx + <span class="number">1</span>][<span class="number">0</span>] = tr[idx + <span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            tr[p][j] = ++ idx;</span><br><span class="line">        &#125;</span><br><span class="line">        p = tr[p][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask_mx</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> u = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">20</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> j = ((x &gt;&gt; i) &amp; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (tr[u][j ^ <span class="number">1</span>]) u = tr[u][j ^ <span class="number">1</span>], res |= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">        <span class="keyword">else</span> u = tr[u][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask_mi</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">20</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> j = ((x &gt;&gt; i) &amp; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (tr[p][j]) p = tr[p][j];</span><br><span class="line">        <span class="keyword">else</span> p = tr[p][j ^ <span class="number">1</span>], res |= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> L, R, a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">slove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tr[<span class="number">0</span>][<span class="number">0</span>] = tr[<span class="number">0</span>][<span class="number">1</span>] = idx = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; L &gt;&gt; R;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = L; i &lt;= R; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="built_in">insert</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = L; i &lt;= R; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x = a[i] ^ R;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ask_mx</span>(x) == R &amp;&amp; <span class="built_in">ask_mi</span>(x) == L) &#123;</span><br><span class="line">            cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> tt;</span><br><span class="line">    cin &gt;&gt; tt;</span><br><span class="line">    <span class="keyword">while</span> (tt -- ) &#123;</span><br><span class="line">        <span class="built_in">slove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面淦不动了, 就这些吧 T_T.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://codeforces.com/contest/1658&quot;&gt;比赛链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A-B就略了 &lt;/p&gt;
&lt;p&gt;思路+补题&lt;/p&gt;
&lt;h2 id=&quot;C-Shinju-and-the-Lost-Permutation&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="Codeforce" scheme="https://chiullian.cn/categories/Codeforce/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>十三届蓝桥杯后感</title>
    <link href="https://chiullian.cn/2022/04/11/%E5%8D%81%E4%B8%89%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%90%8E%E6%84%9F/"/>
    <id>https://chiullian.cn/2022/04/11/%E5%8D%81%E4%B8%89%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%90%8E%E6%84%9F/</id>
    <published>2022-04-10T16:26:21.000Z</published>
    <updated>2022-04-20T09:14:27.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2022年4月9日蓝桥杯拉下帷幕"><a href="#2022年4月9日蓝桥杯拉下帷幕" class="headerlink" title="2022年4月9日蓝桥杯拉下帷幕"></a>2022年4月9日蓝桥杯拉下帷幕</h3><h3 id="赛前"><a href="#赛前" class="headerlink" title="赛前"></a>赛前</h3><p>&amp;nbsp;&amp;nbsp;回望一下自己比赛是的状态，整个人看上去状态及其的不好，可能与这两天的休息情况有关， 也因为自己想着快点把博客完善好，就爆淦了几个夜里（都是早上 一大早&#x2F;五点睡觉。。。 ）， 然后因为自己疫情隔离在家里，所以还得上学校的网课，早上8点半就得起来上网课，所以这几天头脑都是混混的，不知道咋过的0.0。</p><h3 id="赛时复盘"><a href="#赛时复盘" class="headerlink" title="赛时复盘"></a>赛时复盘</h3><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;赛前我专门去把图论以及常用的数论全部复习了一边在acwing上打了几遍，，让我感到崩溃的是初赛一个图论和数论都没考到（T_T, 唔~~我太难了）。</p><p>&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;还有就是刚开始考试，我本人喜欢切屏幕。。。上来给我发了7张黄牌，吓得我一哆嗦。（后来说是没有问题，让我们继续做）</p><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;刚开始做前几道题的时候还算顺利，还有就是有争议的第二题，样例给的是20220123，是顺序日期， 因为其中<strong>一个</strong>顺序是123 (?, 我心想012不也是一个么)  ， 后来我还是把012算上了，因为自己脑抽了把一月份少算了，白给了5分， 写着写着题突然意识到了OI赛制的恐怖， 没有一题我感觉我是全对的。 我之前写题比赛基本都会错一点细节，（这次蓝桥也没有意外 &#x2F;大哭特哭）。击倒水题，我就全对了一到题0.0，芭比Q了, 进决赛都悬了, 本次比赛的罪魁祸首(X进制减法), 好家伙,我分析了一小时左右的样例,竟然不知道他咋转化成十进制的,我想着这个中等一点(放中间的)的题,我都看不懂,完了完了,脑子里又开始乱想, (不会吧不会吧,这都做不出来么,还剩2小时了),后来真的想不出了,就跳过了, 后面基本全乱了阵脚, 枚举子矩阵,按道理枚举三维,剩下的尺取法应该能拿满分的, 我嫌时间可能不够用,就直接无脑上了O($n ^ 4$) 的暴力, 想着先过70%剩下, 回来再优化,  下一题一看是填方格,一眼看过去就是个非常<strong>简单</strong>的状压dp其实这一题是我最遗憾的一题,  刚开始列图表写递推找规律,  总感觉答案就在眼前,(我从此深知自己的状压dp是有多菜了),可能是太久没做过状压dp了,  后来还是没推出来, 后来看大佬题解,发现我真是个<del>sb</del>小可爱, 做到这里还剩1一小时我崩了,李白那题我暴力分很好骗而且有40%的分数,怕没时间了我就是直接dfs爆搜,想这事有时间回来再加一个记忆化应该也可以过…(然而现实总是残酷的, 并没有如我所愿), 下面那一题排雷,我没算时间复杂对, 看完题就思考了一会子, 想着好像多源的bfs,好像是$n ^ 2$ 的复杂度后期再测试 ,这代码也挺长…写了有一会子和调bug, 写完还剩二十分钟左右, 急匆匆的看了 最后一题, 好家伙你让我不会多好,还让我会了,看题意肯定是先从大的往下切, 然后碰见相邻的合并一下,priority搞一下没有问题,</p><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;还剩5分钟的时候心态已经炸裂,合并的细节不知道咋写了(太急了), 后来没调出来, 后期卡别的大佬也是这样贪心的,  悲伤那么大, 前面的题也没优化..这波裂开。   </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;其实这场比赛明显的看出来自己有很大的问题，复习的方面太过于狭窄， 还有自己不会的地方，由思想快速转化成代码的能力还有待提升，看来后面要加练了， 还有自己的解题的顺序, 卡主的一定一定一定要跳过, 这样只会拣了芝麻丢了西瓜(虽然我芝麻也没捡到T_T)！！！。过去的我也管不了了，只能期盼之后少犯些低级的错误。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;2022年4月9日蓝桥杯拉下帷幕&quot;&gt;&lt;a href=&quot;#2022年4月9日蓝桥杯拉下帷幕&quot; class=&quot;headerlink&quot; title=&quot;2022年4月9日蓝桥杯拉下帷幕&quot;&gt;&lt;/a&gt;2022年4月9日蓝桥杯拉下帷幕&lt;/h3&gt;&lt;h3 id=&quot;赛前&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="《赛后感想》" scheme="https://chiullian.cn/categories/%E3%80%8A%E8%B5%9B%E5%90%8E%E6%84%9F%E6%83%B3%E3%80%8B/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>一切的开始</title>
    <link href="https://chiullian.cn/2022/04/06/%E4%B8%80%E5%88%87%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>https://chiullian.cn/2022/04/06/%E4%B8%80%E5%88%87%E7%9A%84%E5%BC%80%E5%A7%8B/</id>
    <published>2022-04-06T08:36:59.000Z</published>
    <updated>2022-04-20T09:15:58.760Z</updated>
    
    <content type="html"><![CDATA[<p>  这里记录了一些近一年所积累的代码基础的模板,和一些实用的技巧</p><h2 id="本人常用模板"><a href="#本人常用模板" class="headerlink" title="本人常用模板"></a>本人常用模板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug(x...) cerr <span class="string">&lt;&lt; (#x) &lt;&lt;&quot; -&gt;</span> <span class="string">&quot;, err(x)</span></span></span><br><span class="line"><span class="string"><span class="meta">#define all(x) (x).begin(), (x).end()</span></span></span><br><span class="line"><span class="string"><span class="meta">#define sz(x) ((int)(x).size())</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">#define fi first</span></span></span><br><span class="line"><span class="string"><span class="meta">#define se second</span></span></span><br><span class="line"><span class="string"><span class="meta">#define endl &#x27;\n&#x27;</span></span></span><br><span class="line"><span class="string"><span class="meta">// #define int long long</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void err() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; &#x27;\n&#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">template&lt;class T, class... Ts&gt;</span></span></span><br><span class="line"><span class="string"><span class="meta">void err(const T &amp;A, const Ts &amp;... other) &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">cerr &lt;&lt; (A) &lt;&lt; &#x27; &#x27;;</span></span></span><br><span class="line"><span class="string"><span class="meta">err(other...);</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">using PII = pair&lt;int, int&gt;;</span></span></span><br><span class="line"><span class="string"><span class="meta">using ll = long long;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">const int N = 2e6 + 10, INF = 0x3f3f3f3f;</span></span></span><br><span class="line"><span class="string"><span class="meta">const int mod = 998244353;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">void solve() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br><span class="line"><span class="string"><span class="meta"></span></span></span><br><span class="line"><span class="string"><span class="meta">signed main() &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">ios::sync_with_stdio(false);</span></span></span><br><span class="line"><span class="string"><span class="meta">cin.tie(nullptr);</span></span></span><br><span class="line"><span class="string"><span class="meta">int ___ = 1;</span></span></span><br><span class="line"><span class="string"><span class="meta">// cin &gt;&gt; ___;</span></span></span><br><span class="line"><span class="string"><span class="meta">for (; ___ -- ;) solve();</span></span></span><br><span class="line"><span class="string"><span class="meta">return 0;</span></span></span><br><span class="line"><span class="string"><span class="meta">&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="解除cin-cout同步流"><a href="#解除cin-cout同步流" class="headerlink" title="解除cin, cout同步流"></a>解除cin, cout同步流</h2><blockquote><p><em>cin</em>， <em>cout</em> &amp;nbsp;之所以效率低，是因为先把要输出的东西存入缓冲区，再输出，导致效率降低<br>而下面的语句可以来解除iostream的输入和输出缓存, 解除之后的速度跟scanf与printf差不多</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br></pre></td></tr></table></figure><h2 id="快速读入与快速写出"><a href="#快速读入与快速写出" class="headerlink" title="快速读入与快速写出"></a>快速读入与快速写出</h2><blockquote><p>可以有效的解决<code>卡常</code>的问题&amp;nbsp; <del>0.0 看上去很牛*的样子</del></p><p>　其实只是通过读入字符而后来转成数字，而原理就是读入字符比数字快 </p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="keyword">inline</span> <span class="title">read</span><span class="params">(T &amp;x)</span> </span>&#123;</span><br><span class="line">    T f = <span class="number">1</span>; x = <span class="number">0</span>; <span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>; ch = <span class="built_in">getchar</span>(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) x = x * <span class="number">10</span> + (ch ^ <span class="number">48</span>), ch = <span class="built_in">getchar</span>();</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... other&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(T&amp; x, other&amp;... y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(x);</span><br><span class="line">    <span class="built_in">read</span>(y...);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>), x = -x;</span><br><span class="line"><span class="keyword">if</span>(x &gt; <span class="number">9</span>) <span class="built_in">print</span>(x / <span class="number">10</span>); </span><br><span class="line"><span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="number">48</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(T x, <span class="type">char</span> ch)</span> </span>&#123; </span><br><span class="line"><span class="built_in">print</span>(x), <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a><mark class="hl-label blue">测试</mark> </h2>]]></content>
    
    
    <summary type="html">  这里记录了一些近一年所积累的代码基础的模板,和一些实用的技巧</summary>
    
    
    
    <category term="算法的笔记" scheme="https://chiullian.cn/categories/%E7%AE%97%E6%B3%95%E7%9A%84%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="https://chiullian.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="C++" scheme="https://chiullian.cn/tags/C/"/>
    
    <category term="模板" scheme="https://chiullian.cn/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>数学公式LaTeX以及网站语法</title>
    <link href="https://chiullian.cn/2022/04/05/blog%E5%86%99%E8%AF%A5%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0%E5%B8%B8%E7%94%A8%E5%86%85%E5%AE%B9/"/>
    <id>https://chiullian.cn/2022/04/05/blog%E5%86%99%E8%AF%A5%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0%E5%B8%B8%E7%94%A8%E5%86%85%E5%AE%B9/</id>
    <published>2022-04-05T10:40:43.000Z</published>
    <updated>2022-05-15T09:44:43.448Z</updated>
    
    <content type="html"><![CDATA[<p>仅限于使用<a href="">butterfly</a>主题的网站</p><h1 id="Markdown的用法大全"><a href="#Markdown的用法大全" class="headerlink" title="Markdown的用法大全"></a><a href="https://markdown-it.github.io/">Markdown的用法大全</a></h1><h1 id="最简单常用的数学符号-后续慢慢更新…"><a href="#最简单常用的数学符号-后续慢慢更新…" class="headerlink" title="最简单常用的数学符号 (后续慢慢更新…)"></a>最简单常用的数学符号 (后续慢慢更新…)</h1><table><thead><tr><th>公式</th><th>效果</th></tr></thead><tbody><tr><td>\leq</td><td>$\le$</td></tr><tr><td>\geq</td><td>$\geq$</td></tr><tr><td>\neq</td><td>$\neq$</td></tr><tr><td>\times</td><td>$\times$</td></tr><tr><td>\div</td><td>$\div$</td></tr><tr><td>\pm</td><td>$\pm$</td></tr><tr><td>\sqrt{2}</td><td>$\sqrt{2}$</td></tr><tr><td>\sqrt[n]{3}</td><td>$\sqrt[n]{3}$</td></tr><tr><td>\frac{7x+5}{1+y^2}</td><td>$\frac{7x+5}{1+y^2}$</td></tr><tr><td>\sin</td><td>$\sin$</td></tr><tr><td>\log_2 10</td><td>$\log_2 10$</td></tr><tr><td>\sum</td><td>$\sum$</td></tr><tr><td>\prod</td><td>$\prod$</td></tr><tr><td>\vec{a} \cdot \vec{b}&#x3D;0</td><td>$\vec{a} \cdot \vec{b}&#x3D;0$</td></tr><tr><td>\lfloor x \rfloor</td><td>$\lfloor x \rfloor$</td></tr><tr><td>\lceil \frac{x}{2} \rceil</td><td>$\lceil \frac{x}{2} \rceil$</td></tr><tr><td>\lbrace a+x \rbrace</td><td>$\lbrace a+x \rbrace$</td></tr><tr><td></td><td></td></tr></tbody></table><p>带括号矩阵</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>[</span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9 </span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125; <span class="keyword">\right</span>]<span class="keyword">\tag</span>&#123;2&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>$$<br>\left[<br>\begin{matrix}<br>1 &amp; 2 &amp; 3 \<br>4 &amp; 5 &amp; 6 \<br>7 &amp; 8 &amp; 9<br>\end{matrix} \right]\tag{2}<br>$$</p><h1 id="label-高亮所需要的文字"><a href="#label-高亮所需要的文字" class="headerlink" title="label (高亮所需要的文字)"></a>label (高亮所需要的文字)</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>效果</th></tr></thead><tbody><tr><td>text</td><td>文本</td></tr><tr><td>color</td><td>default&#x2F;blue&#x2F;pink&#x2F;red&#x2F;purple&#x2F;orange&#x2F;green</td></tr></tbody></table><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line">宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</span><br></pre></td></tr></table></figure><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>]]></content>
    
    
    <summary type="html">小工具</summary>
    
    
    
    
    <category term="小工具" scheme="https://chiullian.cn/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="latex" scheme="https://chiullian.cn/tags/latex/"/>
    
    <category term="butterfly" scheme="https://chiullian.cn/tags/butterfly/"/>
    
  </entry>
  
</feed>
